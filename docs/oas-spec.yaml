openapi: 3.1.0
servers:
  - url: http://{hostname}:{port}/{optionalRoutingPath} 
    description: http
info:
  x-logo:
    url: 'https://raw.githubusercontent.com/neustar/tcs-apis/main/docs/neustar-logo.png'
    altText: Neustar
  version: 1.0.0
  title: STIR/SHAKEN Authentication & Verification Service
  summary: 
  description: |
    # Overview
    The Authentication Service (AS) and Verification Service (VS) implement the IETF RFC 8224 specification, as well as the SHAKEN framework extensions (ATIS-1000074), for securely computing, transiting and verifying SIP Identity headers for caller identity authentication. 
    Additionally, it provides supplemental features including telephone number ownership validation, subscriber-based policy processing, Caller Name (CNAM), Resource Priority?, Enhanced CNAM (ECNAM)/Rich Call Data? and/or robocall analytics.
  
    ## RESTful API Authentication Service
    Currently, a RESTful API client is required to provide an 'apiKey' query parameter with a pre-provisioned value to access API calls that are restricted. If the 'apiKey' parameter is not specified, the client IP address may be used as the backup authentication mechanism if pre-provisioned.
tags:
- name: Generate SIP Identity Headers
- name: Certificate
- name: Error
- name: Verifies SIP Identity Headers
- name: CNAM
- name: ECNAM
- name: Potential Errors
    

x-tagGroups:
  - name: Authentication Service
    tags:
      - Generate SIP Identity Headers
      - Certificate
      - Error
  - name: Verification Service
    tags:
      - Verifies SIP Identity Headers
      - CNAM
      - ECNAM
      - Potential Errors
paths:
  /authn/identity:
    post:
      tags:
      - Generate SIP Identity Headers
      description: |
        This API uses the following data elements in SIP INVITE messages for SIP Identity header creation, in addition to the required 'apiKey' query parameter for uniquely identifying an API client.
        Three different API entry points are defined for SIP Identity header creation:
          * Accepts requests in JSON format and produces responses in JSON format (J-J)
          * Accepts SIP INVITE messages and produces responses in JSON format (S-J)
          * Accepts SIP INVITE messages and produces responses in SIP format (S-S)
      summary: Identity
      operationId: authn/identity
      parameters:
        - in: query
          name: apiKey
          required: true
          schema:
            type: string
          description: The API key uniquely identifying the API client. Cannot be null or empty
        - name: compact
          in: query
          description: Flag for compact SIP Identity header, ignored for 'shaken' PASSporT type
          required: false
          style: form
          schema:
            type: boolean
        - name: ppt
          in: query
          description: PASSporT type value, must be "shaken" or "div" if specified
          required: false
          style: form
          schema:
            type: string
        - name: attest
          in: query
          required: false
          description: attest value specified by ATIS SHAKEN extension
          schema:
            type: string
        - name: origid
          in: query
          description: origid value specified by ATIS SHAKEN extension
          required: false
          style: form
          schema:
            type: string
        - name: origcc
          in: query
          description: Default country code for the originator telephone number
          required: false
          style: form
          schema:
            type: string
        - name: destcc
          in: query
          description: Default country code for the destination telephone number
          required: false
          style: form
          schema:
            type: string  
        - name: verstat
          in: query
          description: Verstat value as defined in ETSI TS 124 299, for performing tagging and the SIP Identity header optionally removed
          required: false
          style: form
          schema:
            type: string
        - name: identity
          in: query
          description: Flag for including SIP Identity header when the "verstat" parameter is specified, with the default value as "true"
          required: false
          style: form
          schema:
            type: boolean
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Identity'
          text/plain:
            schema:
              description: |
                * With SIP INVITE Message & Response in JSON Format (S-J)
                ```curl
                curl 'http://{hostname}:{port}/{optionalRoutingPath}/authn/identity?apiKey=%3CapiKey1%3E&compact=false&ppt=shaken&origcc=1&destcc=1&attest=A&origid=AAA-BBB-CCCC' -i -X POST \
                    -H 'Content-Type: text/plain' \
                    -H 'Accept: application/json' \
                    -d 'INVITE sip:7035550021@proxy.example.com;transport=UDP SIP/2.0
                v: SIP/2.0/UDP proxy.example.com:39089;branch=z9hG4bK
                Max-Forwards: 70
                m: "Alice" <sip:5715550001@proxy.example.com:39089;transport=UDP>
                t: "Bob" <sip:+17035550002@example.com>
                f: "Alice" <sip:+15715550001@example.com>;tag=1f4e4f40
                i: YzRlZDFlYzYyM2IwOTdlMzk0MDA3MTRmZmY3OGIzODM.
                P-Asserted-Identity: Alice <sip:+15715550001@example.com>
                CSeq: 2 INVITE
                Allow: INVITE, ACK, CANCEL, BYE, NOTIFY, REFER, MESSAGE, OPTIONS, INFO, SUBSCRIBE
                c: application/sdp
                Date: Fri, 14 May 2021 16:57:04 GMT
                k: replaces, norefersub, extended-refer, timer, X-cisco-serviceuri
                User-Agent: Z 3.3.25608 r25552
                Allow-Events: presence, kpml
                l: 425
                v=0
                o=Z 0 0 IN IP4 10.31.32.251
                s=Z
                c=IN IP4 10.31.32.251
                t=0 0
                m=audio 8000 RTP/AVP 8 0 3 110 98 101
                a=fingerprint:md5 14:75:8F:1A:FD:44:C0:9B:79:92:07:3C:CF:00:B4:3D
                a=fingerprint:sha-256 AE:C0:70:64:5F:E5:3E:E3:B3:76:30:59:37:61:34:F0:58:CC:33:72:47:C9:78:AD:D1:78:B6:CC:DF:B0:01:9F
                a=rtpmap:110 speex/8000
                a=rtpmap:98 iLBC/8000
                a=fmtp:98 mode=20
                a=rtpmap:101 telephone-event/8000
                a=fmtp:101 0-15
                a=sendrecv
                '
                ```

                * With SIP INVITE Message & Response in SIP Format (S-S)
                ```curl
                curl 'http://{hostname}:{port}/{optionalRoutingPath}/authn/identity?apiKey=%3CapiKey1%3E&compact=false&ppt=shaken&origcc=1&destcc=1&attest=A&origid=AAA-BBB-CCCC&verstat=TN-Validation-Passed&identity=true' -i -X POST \
                    -H 'Content-Type: text/plain' \
                    -H 'Accept: text/plain' \
                    -d 'INVITE sip:7035550021@proxy.example.com;transport=UDP SIP/2.0
                v: SIP/2.0/UDP proxy.example.com:39089;branch=z9hG4bK
                Max-Forwards: 70
                m: "Alice" <sip:5715550001@proxy.example.com:39089;transport=UDP>
                t: "Bob" <sip:+17035550002@example.com>
                f: "Alice" <sip:+15715550001@example.com>;tag=1f4e4f40
                i: YzRlZDFlYzYyM2IwOTdlMzk0MDA3MTRmZmY3OGIzODM.
                P-Asserted-Identity: Alice <sip:+15715550001@example.com>
                CSeq: 2 INVITE
                Allow: INVITE, ACK, CANCEL, BYE, NOTIFY, REFER, MESSAGE, OPTIONS, INFO, SUBSCRIBE
                c: application/sdp
                Date: Fri, 14 May 2021 16:57:02 GMT
                k: replaces, norefersub, extended-refer, timer, X-cisco-serviceuri
                User-Agent: Z 3.3.25608 r25552
                Allow-Events: presence, kpml
                l: 425
                v=0
                o=Z 0 0 IN IP4 10.31.32.251
                s=Z
                c=IN IP4 10.31.32.251
                t=0 0
                m=audio 8000 RTP/AVP 8 0 3 110 98 101
                a=fingerprint:md5 14:75:8F:1A:FD:44:C0:9B:79:92:07:3C:CF:00:B4:3D
                a=fingerprint:sha-256 AE:C0:70:64:5F:E5:3E:E3:B3:76:30:59:37:61:34:F0:58:CC:33:72:47:C9:78:AD:D1:78:B6:CC:DF:B0:01:9F
                a=rtpmap:110 speex/8000
                a=rtpmap:98 iLBC/8000
                a=fmtp:98 mode=20
                a=rtpmap:101 telephone-event/8000
                a=fmtp:101 0-15
                a=sendrecv
                '
                ```
              type: string
            required: true
        required: true
      x-code-samples:
        - lang: Curl(J-J)
          source: |
            curl --location --request POST 'http://{hostname}:{port}/{optionalRoutingPath}/authn/identity?apiKey=%3CapiKey5%3E' \
            --header 'Content-Type: application/json' \
            --header 'Accept: application/json' \
            --data-raw '{
              "from" : "'Alice' <sip:alice@example.com>",
              "to" : "'Bob' <sip:5715550000@example.com>",
              "date" : "Fri, 11 Aug 2017 04:17:14 GMT",
              "pai" : [ "'Alice' <tel:+17035550001>", "'Alice' <sip:+17035550001@example.com>" ],
              "finger_print" : [ {
                "algorithm" : "SHA-1",
                "digest" : "4A:AD:B9:B1:3F:82:18:3B:54:02:12:DF:3E:5D:49:6B:19:E5:7C:AB"
              }, {
                "algorithm" : "SHA-256",
                "digest" : "36:3B:AE:12:95:95:F5:97:2D:F7:E0:84:FE:CD:F1:BC:AD:7A:70:64:F7:E7:4F:7E:A6:02:06:0E:37:54:CF:F7"
              } ],
              "diversion" : "'Bob' <sip:7035550000@example.com>;reason=away",
              "attest"  : "A",
              "origid"  : "d53afeb0-dc48-11e7-a561-7831c1b8deba",
              "dest_cc" : "1",
              "orig_cc" : "1",
              "compact" : false,
              "passport_type" : "shaken",
              "attest" : "A",
              "origid" : "3F9C2836-7E40-11E7-BA58-7831C1B8DEBA",
              "resource_priority" : [ "ets.0, wps.1", "q735.1" ]
            }'
        - lang: Curl(S-J)
          source: |
            curl --location --request POST 'http://{hostname}:{port}/{optionalRoutingPath}/authn/identity-s_j?apiKey=%3CapiKey1%3E&compact=false&ppt=shaken&origcc=1&destcc=1&attest=A&origid=AAA-BBB-CCCC' \
            --header 'Content-Type: text/plain' \
            --header 'Accept: application/json' \
            --data-raw 'INVITE sip:7035550021@proxy.example.com;transport=UDP SIP/2.0
            v: SIP/2.0/UDP proxy.example.com:39089;branch=z9hG4bK
            Max-Forwards: 70
            m: "Alice" <sip:5715550001@proxy.example.com:39089;transport=UDP>
            t: "Bob" <sip:+17035550002@example.com>
            f: "Alice" <sip:+15715550001@example.com>;tag=1f4e4f40
            i: YzRlZDFlYzYyM2IwOTdlMzk0MDA3MTRmZmY3OGIzODM.
            P-Asserted-Identity: Alice <sip:+15715550001@example.com>
            CSeq: 2 INVITE
            Allow: INVITE, ACK, CANCEL, BYE, NOTIFY, REFER, MESSAGE, OPTIONS, INFO, SUBSCRIBE
            c: application/sdp
            Date: Fri, 14 May 2021 16:57:04 GMT
            k: replaces, norefersub, extended-refer, timer, X-cisco-serviceuri
            User-Agent: Z 3.3.25608 r25552
            Allow-Events: presence, kpml
            l: 425

            v=0
            o=Z 0 0 IN IP4 10.31.32.251
            s=Z
            c=IN IP4 10.31.32.251
            t=0 0
            m=audio 8000 RTP/AVP 8 0 3 110 98 101
            a=fingerprint:md5 14:75:8F:1A:FD:44:C0:9B:79:92:07:3C:CF:00:B4:3D
            a=fingerprint:sha-256 AE:C0:70:64:5F:E5:3E:E3:B3:76:30:59:37:61:34:F0:58:CC:33:72:47:C9:78:AD:D1:78:B6:CC:DF:B0:01:9F
            a=rtpmap:110 speex/8000
            a=rtpmap:98 iLBC/8000
            a=fmtp:98 mode=20
            a=rtpmap:101 telephone-event/8000
            a=fmtp:101 0-15
            a=sendrecv
            '
        - lang: Curl(S-S)
          source: |
            curl --location --request POST 'http://{hostname}:{port}/{optionalRoutingPath}/authn/identity-s_s?apiKey=%3CapiKey1%3E&compact=false&ppt=shaken&origcc=1&destcc=1&attest=A&origid=AAA-BBB-CCCC&verstat=TN-Validation-Passed&identity=true' \
            --header 'Content-Type: text/plain' \
            --header 'Accept: text/plain' \
            --data-raw 'INVITE sip:7035550021@proxy.example.com;transport=UDP SIP/2.0
            v: SIP/2.0/UDP proxy.example.com:39089;branch=z9hG4bK
            Max-Forwards: 70
            m: "Alice" <sip:5715550001@proxy.example.com:39089;transport=UDP>
            t: "Bob" <sip:+17035550002@example.com>
            f: "Alice" <sip:+15715550001@example.com>;tag=1f4e4f40
            i: YzRlZDFlYzYyM2IwOTdlMzk0MDA3MTRmZmY3OGIzODM.
            P-Asserted-Identity: Alice <sip:+15715550001@example.com>
            CSeq: 2 INVITE
            Allow: INVITE, ACK, CANCEL, BYE, NOTIFY, REFER, MESSAGE, OPTIONS, INFO, SUBSCRIBE
            c: application/sdp
            Date: Fri, 14 May 2021 16:57:02 GMT
            k: replaces, norefersub, extended-refer, timer, X-cisco-serviceuri
            User-Agent: Z 3.3.25608 r25552
            Allow-Events: presence, kpml
            l: 425

            v=0
            o=Z 0 0 IN IP4 10.31.32.251
            s=Z
            c=IN IP4 10.31.32.251
            t=0 0
            m=audio 8000 RTP/AVP 8 0 3 110 98 101
            a=fingerprint:md5 14:75:8F:1A:FD:44:C0:9B:79:92:07:3C:CF:00:B4:3D
            a=fingerprint:sha-256 AE:C0:70:64:5F:E5:3E:E3:B3:76:30:59:37:61:34:F0:58:CC:33:72:47:C9:78:AD:D1:78:B6:CC:DF:B0:01:9F
            a=rtpmap:110 speex/8000
            a=rtpmap:98 iLBC/8000
            a=fmtp:98 mode=20
            a=rtpmap:101 telephone-event/8000
            a=fmtp:101 0-15
            a=sendrecv
            '
        - lang: Java
          source: |
            Unirest.setTimeouts(0, 0);
            HttpResponse<String> response = Unirest.post("http://{hostname}:{port}/{optionalRoutingPath}/authn/identity?apiKey=%3CapiKey5%3E")
              .header("Content-Type", "applicat`ion/json")
              .header("Accept", "application/json")
              .body("{\n  \"from\" : \"\\\"Alice\\\" <sip:alice@example.com>\",\n  \"to\" : \"\\\"Bob\\\" <sip:5715550000@example.com>\",\n  \"date\" : \"Fri, 11 Aug 2017 04:17:14 GMT\",\n  \"pai\" : [ \"\\\"Alice\\\" <tel:+17035550001>\", \"\\\"Alice\\\" <sip:+17035550001@example.com>\" ],\n  \"finger_print\" : [ {\n    \"algorithm\" : \"SHA-1\",\n    \"digest\" : \"4A:AD:B9:B1:3F:82:18:3B:54:02:12:DF:3E:5D:49:6B:19:E5:7C:AB\"\n  }, {\n    \"algorithm\" : \"SHA-256\",\n    \"digest\" : \"36:3B:AE:12:95:95:F5:97:2D:F7:E0:84:FE:CD:F1:BC:AD:7A:70:64:F7:E7:4F:7E:A6:02:06:0E:37:54:CF:F7\"\n  } ],\n  \"diversion\" : \"\\\"Bob\\\" <sip:7035550000@example.com>;reason=away\",\n  \"attest\"  : \"A\",\n  \"origid\"  : \"d53afeb0-dc48-11e7-a561-7831c1b8deba\",\n  \"dest_cc\" : \"1\",\n  \"orig_cc\" : \"1\",\n  \"compact\" : false,\n  \"passport_type\" : \"shaken\",\n  \"attest\" : \"A\",\n  \"origid\" : \"3F9C2836-7E40-11E7-BA58-7831C1B8DEBA\",\n  \"resource_priority\" : [ \"ets.0, wps.1\", \"q735.1\" ]\n}")
              .asString();
        - lang: Python
          source: |
            import requests
            url = "http://{hostname}:{port}/{optionalRoutingPath}/authn/identity?apiKey=%3CapiKey5%3E"

            payload="{\n  \"from\" : \"\\\"Alice\\\" <sip:alice@example.com>\",\n  \"to\" : \"\\\"Bob\\\" <sip:5715550000@example.com>\",\n  \"date\" : \"Fri, 11 Aug 2017 04:17:14 GMT\",\n  \"pai\" : [ \"\\\"Alice\\\" <tel:+17035550001>\", \"\\\"Alice\\\" <sip:+17035550001@example.com>\" ],\n  \"finger_print\" : [ {\n    \"algorithm\" : \"SHA-1\",\n    \"digest\" : \"4A:AD:B9:B1:3F:82:18:3B:54:02:12:DF:3E:5D:49:6B:19:E5:7C:AB\"\n  }, {\n    \"algorithm\" : \"SHA-256\",\n    \"digest\" : \"36:3B:AE:12:95:95:F5:97:2D:F7:E0:84:FE:CD:F1:BC:AD:7A:70:64:F7:E7:4F:7E:A6:02:06:0E:37:54:CF:F7\"\n  } ],\n  \"diversion\" : \"\\\"Bob\\\" <sip:7035550000@example.com>;reason=away\",\n  \"attest\"  : \"A\",\n  \"origid\"  : \"d53afeb0-dc48-11e7-a561-7831c1b8deba\",\n  \"dest_cc\" : \"1\",\n  \"orig_cc\" : \"1\",\n  \"compact\" : false,\n  \"passport_type\" : \"shaken\",\n  \"attest\" : \"A\",\n  \"origid\" : \"3F9C2836-7E40-11E7-BA58-7831C1B8DEBA\",\n  \"resource_priority\" : [ \"ets.0, wps.1\", \"q735.1\" ]\n}"
            headers = {
              'Content-Type': 'application/json',
              'Accept': 'application/json'
            }

            response = requests.request("POST", url, headers=headers, data=payload)

            print(response.text)

                      - lang: Curl
                        source: |
                          curl --location --request POST 'http://{hostname}:{port}/{optionalRoutingPath}/authn/identity?apiKey=%3CapiKey5%3E' \
                          --header 'Content-Type: application/json' \
                          --header 'Accept: application/json' \
                          --data-raw '{
                            "from" : "\"Alice\" <sip:alice@example.com>",
                            "to" : "\"Bob\" <sip:5715550000@example.com>",
                            "date" : "Fri, 11 Aug 2017 04:17:14 GMT",
                            "pai" : [ "\"Alice\" <tel:+17035550001>", "\"Alice\" <sip:+17035550001@example.com>" ],
                            "finger_print" : [ {
                              "algorithm" : "SHA-1",
                              "digest" : "4A:AD:B9:B1:3F:82:18:3B:54:02:12:DF:3E:5D:49:6B:19:E5:7C:AB"
                            }, {
                              "algorithm" : "SHA-256",
                              "digest" : "36:3B:AE:12:95:95:F5:97:2D:F7:E0:84:FE:CD:F1:BC:AD:7A:70:64:F7:E7:4F:7E:A6:02:06:0E:37:54:CF:F7"
                            } ],
                            "diversion" : "\"Bob\" <sip:7035550000@example.com>;reason=away",
                            "attest"  : "A",
                            "origid"  : "d53afeb0-dc48-11e7-a561-7831c1b8deba",
                            "dest_cc" : "1",
                            "orig_cc" : "1",
                            "compact" : false,
                            "passport_type" : "shaken",
                            "attest" : "A",
                            "origid" : "3F9C2836-7E40-11E7-BA58-7831C1B8DEBA",
                            "resource_priority" : [ "ets.0, wps.1", "q735.1" ]
                          }'
        - lang: Ruby
          source: |
            require "uri"
            require "net/http"

            url = URI("http://{hostname}:{port}/{optionalRoutingPath}/authn/identity?apiKey=%3CapiKey5%3E")

            https = Net::HTTP.new(url.host, url.port)
            https.use_ssl = true

            request = Net::HTTP::Post.new(url)
            request["Content-Type"] = "application/json"
            request["Accept"] = "application/json"
            request.body = "{\n  \"from\" : \"\\\"Alice\\\" <sip:alice@example.com>\",\n  \"to\" : \"\\\"Bob\\\" <sip:5715550000@example.com>\",\n  \"date\" : \"Fri, 11 Aug 2017 04:17:14 GMT\",\n  \"pai\" : [ \"\\\"Alice\\\" <tel:+17035550001>\", \"\\\"Alice\\\" <sip:+17035550001@example.com>\" ],\n  \"finger_print\" : [ {\n    \"algorithm\" : \"SHA-1\",\n    \"digest\" : \"4A:AD:B9:B1:3F:82:18:3B:54:02:12:DF:3E:5D:49:6B:19:E5:7C:AB\"\n  }, {\n    \"algorithm\" : \"SHA-256\",\n    \"digest\" : \"36:3B:AE:12:95:95:F5:97:2D:F7:E0:84:FE:CD:F1:BC:AD:7A:70:64:F7:E7:4F:7E:A6:02:06:0E:37:54:CF:F7\"\n  } ],\n  \"diversion\" : \"\\\"Bob\\\" <sip:7035550000@example.com>;reason=away\",\n  \"attest\"  : \"A\",\n  \"origid\"  : \"d53afeb0-dc48-11e7-a561-7831c1b8deba\",\n  \"dest_cc\" : \"1\",\n  \"orig_cc\" : \"1\",\n  \"compact\" : false,\n  \"passport_type\" : \"shaken\",\n  \"attest\" : \"A\",\n  \"origid\" : \"3F9C2836-7E40-11E7-BA58-7831C1B8DEBA\",\n  \"resource_priority\" : [ \"ets.0, wps.1\", \"q735.1\" ]\n}"

            response = https.request(request)
            puts response.read_body
      responses:
        200:
          description: successful operation
          content:
            application/json: 
              schema: 
                $ref: '#/components/schemas/SuccessResponse'
            text/plain:
              schema:
                type: string
                description: |
                  * With SIP INVITE Message & Response in SIP Format (S-S)
                  ```curl
                  HTTP/1.1 200 OK
                  Content-Type: text/plain;charset=UTF-8
                  Content-Length: 1981
                  INVITE sip:7035550021@proxy.example.com;transport=UDP SIP/2.0
                  v: SIP/2.0/UDP proxy.example.com:39089;branch=z9hG4bK
                  Max-Forwards: 70
                  m: "Alice" <sip:5715550001@proxy.example.com:39089;transport=UDP>
                  t: "Bob" <sip:+17035550002@example.com>
                  f: "Alice" <sip:+15715550001;verstat=TN-Validation-Passed@example.com>;tag=1f4e4f40
                  y: eyJhbGciOiJFUzI1NiIsInBwdCI6InNoYWtlbiIsInR5cCI6InBhc3Nwb3J0IiwieDV1IjoiaHR0cHM6Ly9jYS1hdXRobi5uZXVzdGFybGFiLmJpei9jY2lkL2F1dGhuL3YyL2NlcnRzLzIwMDAxLjEwMDAxIn0.eyJhdHRlc3QiOiJDIiwiZGVzdCI6eyJ0biI6WyIxNzAzNTU1MDAwMiJdfSwiaWF0IjoxNjIxMDExNDIyLCJta3kiOlt7ImFsZyI6Im1kNSIsImRpZyI6IjE0NzU4RjFBRkQ0NEMwOUI3OTkyMDczQ0NGMDBCNDNEIn0seyJhbGciOiJzaGEtMjU2IiwiZGlnIjoiQUVDMDcwNjQ1RkU1M0VFM0IzNzYzMDU5Mzc2MTM0RjA1OENDMzM3MjQ3Qzk3OEFERDE3OEI2Q0NERkIwMDE5RiJ9XSwib3JpZyI6eyJ0biI6IjE1NzE1NTUwMDAxIn0sIm9yaWdpZCI6ImZkYTYyM2EyLWE4OWQtMTFlOS1hZjgzLTAwNTA1NjlhYmIzNCJ9.pV58sy9KSKUCsM9VT_MzJ5srxib53d5xyoKcGBV9o-SJiAdaTB7t3vuxAh8WX8b6BMc_1P8mAk8WfKD3uSXGaA;info=<http://{hostname}:{port}/{optionalRoutingPath}/authn/v2/certs/20001.10001>;alg=ES256;ppt="shaken"
                  P-Attestation-Indicator: A
                  P-Origination-Id: AAA-BBB-CCCC
                  i: YzRlZDFlYzYyM2IwOTdlMzk0MDA3MTRmZmY3OGIzODM.
                  P-Asserted-Identity: Alice <sip:+15715550001;verstat=TN-Validation-Passed@example.com>
                  CSeq: 2 INVITE
                  Allow: INVITE, ACK, CANCEL, BYE, NOTIFY, REFER, MESSAGE, OPTIONS, INFO, SUBSCRIBE
                  c: application/sdp
                  Date: Fri, 14 May 2021 16:57:02 GMT
                  k: replaces, norefersub, extended-refer, timer, X-cisco-serviceuri
                  User-Agent: Z 3.3.25608 r25552
                  Allow-Events: presence, kpml
                  l: 425
                  v=0
                  o=Z 0 0 IN IP4 10.31.32.251
                  s=Z
                  c=IN IP4 10.31.32.251
                  t=0 0
                  m=audio 8000 RTP/AVP 8 0 3 110 98 101
                  a=fingerprint:md5 14:75:8F:1A:FD:44:C0:9B:79:92:07:3C:CF:00:B4:3D
                  a=fingerprint:sha-256 AE:C0:70:64:5F:E5:3E:E3:B3:76:30:59:37:61:34:F0:58:CC:33:72:47:C9:78:AD:D1:78:B6:CC:DF:B0:01:9F
                  a=rtpmap:110 speex/8000
                  a=rtpmap:98 iLBC/8000
                  a=fmtp:98 mode=20
                  a=rtpmap:101 telephone-event/8000
                  a=fmtp:101 0-15
                  a=sendrecv
                  ```
                example: |
                          'HTTP/1.1 200 OK
                          Content-Type: text/plain;charset=UTF-8
                          Content-Length: 1981

                          INVITE sip:7035550021@proxy.example.com;transport=UDP SIP/2.0
                          v: SIP/2.0/UDP proxy.example.com:39089;branch=z9hG4bK
                          Max-Forwards: 70
                          m: "Alice" <sip:5715550001@proxy.example.com:39089;transport=UDP>
                          t: "Bob" <sip:+17035550002@example.com>
                          f: "Alice" <sip:+15715550001;verstat=TN-Validation-Passed@example.com>;tag=1f4e4f40
                          y: eyJhbGciOiJFUzI1NiIsInBwdCI6InNoYWtlbiIsInR5cCI6InBhc3Nwb3J0IiwieDV1IjoiaHR0cHM6Ly9jYS1hdXRobi5uZXVzdGFybGFiLmJpei9jY2lkL2F1dGhuL3YyL2NlcnRzLzIwMDAxLjEwMDAxIn0.eyJhdHRlc3QiOiJDIiwiZGVzdCI6eyJ0biI6WyIxNzAzNTU1MDAwMiJdfSwiaWF0IjoxNjIxMDExNDIyLCJta3kiOlt7ImFsZyI6Im1kNSIsImRpZyI6IjE0NzU4RjFBRkQ0NEMwOUI3OTkyMDczQ0NGMDBCNDNEIn0seyJhbGciOiJzaGEtMjU2IiwiZGlnIjoiQUVDMDcwNjQ1RkU1M0VFM0IzNzYzMDU5Mzc2MTM0RjA1OENDMzM3MjQ3Qzk3OEFERDE3OEI2Q0NERkIwMDE5RiJ9XSwib3JpZyI6eyJ0biI6IjE1NzE1NTUwMDAxIn0sIm9yaWdpZCI6ImZkYTYyM2EyLWE4OWQtMTFlOS1hZjgzLTAwNTA1NjlhYmIzNCJ9.pV58sy9KSKUCsM9VT_MzJ5srxib53d5xyoKcGBV9o-SJiAdaTB7t3vuxAh8WX8b6BMc_1P8mAk8WfKD3uSXGaA;info=<http://{hostname}:{port}/{optionalRoutingPath}/authn/certs/20001.10001>;alg=ES256;ppt="shaken"
                          P-Attestation-Indicator: A
                          P-Origination-Id: AAA-BBB-CCCC
                          i: YzRlZDFlYzYyM2IwOTdlMzk0MDA3MTRmZmY3OGIzODM.
                          P-Asserted-Identity: Alice <sip:+15715550001;verstat=TN-Validation-Passed@example.com>
                          CSeq: 2 INVITE
                          Allow: INVITE, ACK, CANCEL, BYE, NOTIFY, REFER, MESSAGE, OPTIONS, INFO, SUBSCRIBE
                          c: application/sdp
                          Date: Fri, 14 May 2021 16:57:02 GMT
                          k: replaces, norefersub, extended-refer, timer, X-cisco-serviceuri
                          User-Agent: Z 3.3.25608 r25552
                          Allow-Events: presence, kpml
                          l: 425

                          v=0
                          o=Z 0 0 IN IP4 10.31.32.251
                          s=Z
                          c=IN IP4 10.31.32.251
                          t=0 0
                          m=audio 8000 RTP/AVP 8 0 3 110 98 101
                          a=fingerprint:md5 14:75:8F:1A:FD:44:C0:9B:79:92:07:3C:CF:00:B4:3D
                          a=fingerprint:sha-256 AE:C0:70:64:5F:E5:3E:E3:B3:76:30:59:37:61:34:F0:58:CC:33:72:47:C9:78:AD:D1:78:B6:CC:DF:B0:01:9F
                          a=rtpmap:110 speex/8000
                          a=rtpmap:98 iLBC/8000
                          a=fmtp:98 mode=20
                          a=rtpmap:101 telephone-event/8000
                          a=fmtp:101 0-15
                          a=sendrecv'
        400:
          description: Error Response
          content: 
            application/json: 
              schema: 
                $ref: '#/components/schemas/ErrorResponse400'
            text/plain:
              schema:
                type: string
                description: |
                  * With SIP INVITE Message & Response in SIP Format (S-S)
                  ```
                  HTTP/1.1 400 Forbidden
                  Content-Type: text/plain;charset=UTF-8
                  Content-Length: 197
                  SIP/2.0 437 Credential has expired
                  From: "Alice" <sip:+15714345500@example.com>
                  To: "Bob" <sip:+447035550000@example.com>
                  Reason: SIP;cause=437;text="Credential has expired"
                  Content-Length: 0
                  ```
                example: 'HTTP/1.1 403 Forbidden
                          Content-Type: text/plain;charset=UTF-8
                          Content-Length: 197

                          SIP/2.0 437 Credential has expired
                          From: "Alice" <sip:+15714345500@example.com>
                          To: "Bob" <sip:+447035550000@example.com>
                          Reason: SIP;cause=437;text="Credential has expired"
                          Content-Length: 0'
        403:
          description: Error Response
          content: 
            application/json: 
              schema: 
                $ref: '#/components/schemas/ErrorResponse403'
            text/plain:
              schema:
                type: string
                description: |
                  * With SIP INVITE Message & Response in SIP Format (S-S)
                  ```
                  HTTP/1.1 403 Forbidden
                  Content-Type: text/plain;charset=UTF-8
                  Content-Length: 197
                  SIP/2.0 437 Credential has expired
                  From: "Alice" <sip:+15714345500@example.com>
                  To: "Bob" <sip:+447035550000@example.com>
                  Reason: SIP;cause=437;text="Credential has expired"
                  Content-Length: 0
                  ```
                example: 'HTTP/1.1 403 Forbidden
                          Content-Type: text/plain;charset=UTF-8
                          Content-Length: 197

                          SIP/2.0 437 Credential has expired
                          From: "Alice" <sip:+15714345500@example.com>
                          To: "Bob" <sip:+447035550000@example.com>
                          Reason: SIP;cause=437;text="Credential has expired"
                          Content-Length: 0'
  /authn/identity/proxy/{addr}/{port}:
    post:
      tags:
      - Generate SIP Identity Headers
      summary: Proxy Identity
      operationId: post/authn/identity/proxy/{addr}/{port}
      description: |
        Accepts SIP INVITE messages as requests and produces responses in JSON Format for SIP Proxies.
      parameters:
        - in: query
          name: apiKey
          required: true
          schema:
            type: string
          description: The API key uniquely identifying the API client. Cannot be null or empty
        - name: addr
          in: path
          description: The remote IP address from which the SIP INVITE message is originated
          required: true
          schema:
            type: string
        - name: port
          in: path
          description: The remote port from which the SIP INVITE message is originated
          required: true
          schema:
            type: string
      requestBody:
        description: ''
        content:
          text/plain:
            schema:
              type: string
              example: 'SIP sip:17035550021@proxy.example.com;transport=UDP SIP/2.0 From: Alice <sip:+15714345500@example.com> To: Bob <sip:+447035550000@example.com>'
        required: true
      x-code-samples:
        - lang: Curl
          source: |
            curl --location --request POST 'http://{hostname}:{port}/{optionalRoutingPath}/authn/identity/proxy/127.0.0.1/5060?apiKey=%3CapiKey1%3E' \
            --header 'Content-Type: text/plain' \
            --header 'Accept: application/json' \
            --data-raw 'INVITE sip:7035550021@proxy.example.com;transport=UDP SIP/2.0
            Via: SIP/2.0/UDP proxy.example.com:39089;branch=z9hG4bK
            Max-Forwards: 70
            Contact: "Alice" <sip:5715550001@proxy.example.com:39089;transport=UDP>
            To: "Bob" <sip:+17035550002@example.com>
            From: "Alice" <sip:+15715550001@example.com>;tag=1f4e4f40
            Call-ID: YzRlZDFlYzYyM2IwOTdlMzk0MDA3MTRmZmY3OGIzODM.
            P-Asserted-Identity: Alice <sip:+15715550001@example.com>
            CSeq: 2 INVITE
            Allow: INVITE, ACK, CANCEL, BYE, NOTIFY, REFER, MESSAGE, OPTIONS, INFO, SUBSCRIBE
            Content-Type: application/sdp
            Date: Fri, 14 May 2021 16:57:02 GMT
            Supported: replaces, norefersub, extended-refer, timer, X-cisco-serviceuri
            User-Agent: Z 3.3.25608 r25552
            Allow-Events: presence, kpml
            Content-Length: 425
            v=0
            o=Z 0 0 IN IP4 10.31.32.251
            s=Z
            c=IN IP4 10.31.32.251
            t=0 0
            m=audio 8000 RTP/AVP 8 0 3 110 98 101
            a=fingerprint:md5 14:75:8F:1A:FD:44:C0:9B:79:92:07:3C:CF:00:B4:3D
            a=fingerprint:sha-256 AE:C0:70:64:5F:E5:3E:E3:B3:76:30:59:37:61:34:F0:58:CC:33:72:47:C9:78:AD:D1:78:B6:CC:DF:B0:01:9F
            a=rtpmap:110 speex/8000
            a=rtpmap:98 iLBC/8000
            a=fmtp:98 mode=20
            a=rtpmap:101 telephone-event/8000
            a=fmtp:101 0-15
            a=sendrecv
            '
        - lang: Java
          source: |
            Unirest.setTimeouts(0, 0);
            HttpResponse<String> response = Unirest.post("http://{hostname}:{port}/{optionalRoutingPath}/authn/identity/proxy/127.0.0.1/5060?apiKey=%3CapiKey1%3E")
              .header("Content-Type", "text/plain")
              .header("Accept", "application/json")
              .body("INVITE sip:7035550021@proxy.example.com;transport=UDP SIP/2.0\nVia: SIP/2.0/UDP proxy.example.com:39089;branch=z9hG4bK\nMax-Forwards: 70\nContact: \"Alice\" <sip:5715550001@proxy.example.com:39089;transport=UDP>\nTo: \"Bob\" <sip:+17035550002@example.com>\nFrom: \"Alice\" <sip:+15715550001@example.com>;tag=1f4e4f40\nCall-ID: YzRlZDFlYzYyM2IwOTdlMzk0MDA3MTRmZmY3OGIzODM.\nP-Asserted-Identity: Alice <sip:+15715550001@example.com>\nCSeq: 2 INVITE\nAllow: INVITE, ACK, CANCEL, BYE, NOTIFY, REFER, MESSAGE, OPTIONS, INFO, SUBSCRIBE\nContent-Type: application/sdp\nDate: Fri, 14 May 2021 16:57:02 GMT\nSupported: replaces, norefersub, extended-refer, timer, X-cisco-serviceuri\nUser-Agent: Z 3.3.25608 r25552\nAllow-Events: presence, kpml\nContent-Length: 425\n\nv=0\no=Z 0 0 IN IP4 10.31.32.251\ns=Z\nc=IN IP4 10.31.32.251\nt=0 0\nm=audio 8000 RTP/AVP 8 0 3 110 98 101\na=fingerprint:md5 14:75:8F:1A:FD:44:C0:9B:79:92:07:3C:CF:00:B4:3D\na=fingerprint:sha-256 AE:C0:70:64:5F:E5:3E:E3:B3:76:30:59:37:61:34:F0:58:CC:33:72:47:C9:78:AD:D1:78:B6:CC:DF:B0:01:9F\na=rtpmap:110 speex/8000\na=rtpmap:98 iLBC/8000\na=fmtp:98 mode=20\na=rtpmap:101 telephone-event/8000\na=fmtp:101 0-15\na=sendrecv\n")
              .asString();
        - lang: Python
          source: |
            import requests

            url = "http://{hostname}:{port}/{optionalRoutingPath}/authn/identity/proxy/127.0.0.1/5060?apiKey=%3CapiKey1%3E"

            payload="INVITE sip:7035550021@proxy.example.com;transport=UDP SIP/2.0\nVia: SIP/2.0/UDP proxy.example.com:39089;branch=z9hG4bK\nMax-Forwards: 70\nContact: \"Alice\" <sip:5715550001@proxy.example.com:39089;transport=UDP>\nTo: \"Bob\" <sip:+17035550002@example.com>\nFrom: \"Alice\" <sip:+15715550001@example.com>;tag=1f4e4f40\nCall-ID: YzRlZDFlYzYyM2IwOTdlMzk0MDA3MTRmZmY3OGIzODM.\nP-Asserted-Identity: Alice <sip:+15715550001@example.com>\nCSeq: 2 INVITE\nAllow: INVITE, ACK, CANCEL, BYE, NOTIFY, REFER, MESSAGE, OPTIONS, INFO, SUBSCRIBE\nContent-Type: application/sdp\nDate: Fri, 14 May 2021 16:57:02 GMT\nSupported: replaces, norefersub, extended-refer, timer, X-cisco-serviceuri\nUser-Agent: Z 3.3.25608 r25552\nAllow-Events: presence, kpml\nContent-Length: 425\n\nv=0\no=Z 0 0 IN IP4 10.31.32.251\ns=Z\nc=IN IP4 10.31.32.251\nt=0 0\nm=audio 8000 RTP/AVP 8 0 3 110 98 101\na=fingerprint:md5 14:75:8F:1A:FD:44:C0:9B:79:92:07:3C:CF:00:B4:3D\na=fingerprint:sha-256 AE:C0:70:64:5F:E5:3E:E3:B3:76:30:59:37:61:34:F0:58:CC:33:72:47:C9:78:AD:D1:78:B6:CC:DF:B0:01:9F\na=rtpmap:110 speex/8000\na=rtpmap:98 iLBC/8000\na=fmtp:98 mode=20\na=rtpmap:101 telephone-event/8000\na=fmtp:101 0-15\na=sendrecv\n"
            headers = {
              'Content-Type': 'text/plain',
              'Accept': 'application/json'
            }

            response = requests.request("POST", url, headers=headers, data=payload)

            print(response.text)
        - lang: Ruby
          source: |
            require "uri"
            require "net/http"

            url = URI("http://{hostname}:{port}/{optionalRoutingPath}/authn/identity/proxy/127.0.0.1/5060?apiKey=%3CapiKey1%3E")

            https = Net::HTTP.new(url.host, url.port)
            https.use_ssl = true

            request = Net::HTTP::Post.new(url)
            request["Content-Type"] = "text/plain"
            request["Accept"] = "application/json"
            request.body = "INVITE sip:7035550021@proxy.example.com;transport=UDP SIP/2.0\nVia: SIP/2.0/UDP proxy.example.com:39089;branch=z9hG4bK\nMax-Forwards: 70\nContact: \"Alice\" <sip:5715550001@proxy.example.com:39089;transport=UDP>\nTo: \"Bob\" <sip:+17035550002@example.com>\nFrom: \"Alice\" <sip:+15715550001@example.com>;tag=1f4e4f40\nCall-ID: YzRlZDFlYzYyM2IwOTdlMzk0MDA3MTRmZmY3OGIzODM.\nP-Asserted-Identity: Alice <sip:+15715550001@example.com>\nCSeq: 2 INVITE\nAllow: INVITE, ACK, CANCEL, BYE, NOTIFY, REFER, MESSAGE, OPTIONS, INFO, SUBSCRIBE\nContent-Type: application/sdp\nDate: Fri, 14 May 2021 16:57:02 GMT\nSupported: replaces, norefersub, extended-refer, timer, X-cisco-serviceuri\nUser-Agent: Z 3.3.25608 r25552\nAllow-Events: presence, kpml\nContent-Length: 425\n\nv=0\no=Z 0 0 IN IP4 10.31.32.251\ns=Z\nc=IN IP4 10.31.32.251\nt=0 0\nm=audio 8000 RTP/AVP 8 0 3 110 98 101\na=fingerprint:md5 14:75:8F:1A:FD:44:C0:9B:79:92:07:3C:CF:00:B4:3D\na=fingerprint:sha-256 AE:C0:70:64:5F:E5:3E:E3:B3:76:30:59:37:61:34:F0:58:CC:33:72:47:C9:78:AD:D1:78:B6:CC:DF:B0:01:9F\na=rtpmap:110 speex/8000\na=rtpmap:98 iLBC/8000\na=fmtp:98 mode=20\na=rtpmap:101 telephone-event/8000\na=fmtp:101 0-15\na=sendrecv\n"

            response = https.request(request)
            puts response.read_body
      responses:
        200:
          description: successful operation
          content:
            application/json: 
              schema: 
                $ref: '#/components/schemas/SuccessResponseProxy'
            text/plain:
              schema:
                type: string
                example: 'INVITE sip:17035550021@proxy.example.com;transport=UDP SIP/2.0From: "Alice" <sip:+15714345500@example.com>Identity: eyJhbGciOiJFUzI1NiIsInBwdCI6InNoYWtlbiIsInR5cCI6InBhc3Nwb3J0IiwieDV1IjoiaHR0cHM6Ly9jYS1hdXRobi5uZXVzdGFybGFiLmJpei9jY2lkL2F1dGhuL3YyL2NlcnRzLzIwMDAxLjEwMDAxIn0.eyJhdHRlc3QiOiJBIiwiZGVzdCI6eyJ0biI6WyI0NDcwMzU1NTAwMDAiXX0sImlhdCI6MTYyMTAxMTQyNSwib3JpZyI6eyJ0biI6IjE1NzE0MzQ1NTAwIn0sIm9yaWdpZCI6Ijc4MzZlYzFkMDYwNzRkNjg4YjYyYzFlYTVlYmQxOTM5In0.RIDQYZP0SNd7ejjJGlcYLQ-55XssLVG5hJ5001v-unKFbD349VVYLderLBt_4h-eCgAcWIsuAW6YSMUqfPk8PA;info=<http://{hostname}:{port}/{optionalRoutingPath}/authn/certs/20001.10001>;alg=ES256;ppt="shaken"Date: Fri, 14 May 2021 16:57:05 GMTTo: "Bob" <sip:+447035550000@example.com>'
        403:
          description: Error Response
          content: 
            application/json: 
              schema: 
                $ref: '#/components/schemas/ErrorResponseProxy403'
    get:
      tags:
      - Generate SIP Identity Headers
      summary: Proxy Identity
      operationId: get/authn/identity/proxy/{addr}/{port}
      description: |
        This API entry point returns next hop and policy data in JSON Format for SIP Proxies.
        
      parameters:
        - in: query
          name: apiKey
          required: true
          schema:
            type: string
          description: The API key uniquely identifying the API client. Cannot be null or empty
        - name: addr
          in: path
          description: The remote IP address from which the SIP INVITE message is originated
          required: true
          schema:
            type: string
        - name: port
          in: path
          description: The remote port from which the SIP INVITE message is originated
          required: true
          schema:
            type: string
      x-code-samples:
        - lang: Curl
          source: |
            curl --location --request GET 'http://{hostname}:{port}/{optionalRoutingPath}/authn/identity/proxy/192.168.1.1/5060?apiKey=%3CapiKey1%3E' \
            --header 'Accept: application/json'
        - lang: Java
          source: |
            Unirest.setTimeouts(0, 0);
            HttpResponse<String> response = Unirest.get("http://{hostname}:{port}/{optionalRoutingPath}/authn/identity/proxy/192.168.1.1/5060?apiKey=%3CapiKey1%3E")
              .header("Accept", "application/json")
              .asString();
        - lang: Python
          source: |
            import requests

            url = "http://{hostname}:{port}/{optionalRoutingPath}/authn/identity/proxy/192.168.1.1/5060?apiKey=%3CapiKey1%3E"

            payload={}
            headers = {
              'Accept': 'application/json'
            }

            response = requests.request("GET", url, headers=headers, data=payload)

            print(response.text)      
        - lang: Ruby
          source: |
            require "uri"
            require "net/http"

            url = URI("http://{hostname}:{port}/{optionalRoutingPath}/authn/identity/proxy/192.168.1.1/5060?apiKey=%3CapiKey1%3E")

            https = Net::HTTP.new(url.host, url.port)
            https.use_ssl = true

            request = Net::HTTP::Get.new(url)
            request["Accept"] = "application/json"

            response = https.request(request)
            puts response.read_body
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    description: |
                      The status of Authentication Service operation for SIP proxy. A successful response in JSON format includes the "status" attribute with a value of "ok". It also contains an optional "next_hop" attribute for indicating the next hop for routing the SIP messages, and an optional "policy" attribute with an opaque string to be consumed by the SIP proxy for manipulating SIP headers and mapping error conditions. Finally, it contains an optional "header" attribute, containing a list of SIP headers to be added to or removed from the SIP INVITE message.
                    
                    example: ok
                    required: true
                  next_hop:
                    type: string
                    description: The URI of next hop
                    example: udp:192.168.1.1:5060
                    required: false
                  policy:
                    type: string
                    description: The policy for processing the SIP message
                    example: '{\"stateful\":false,\"via\":false,\"max_forwards\":false,\"route\":false,\"record_route\":false,\"error_action\":[{\"error\":\"default\",\"action\":\"passthru\"},{\"error\":\"438\",\"action\":\"custom\",\"sip_code\":481}]}"'
                    required: false
        403:
          description: Error Response
          content: 
            application/json: 
              schema: 
                $ref: '#/components/schemas/ErrorResponseProxy403'
  /authn/certs/{id}:
    get:
      tags:
      - Certificate
      description: |
        This API entry point is to return the certificate of a customer that does not provide a public accessible URL for fetching its certificate, so that signatures embedded in the SIP Identity headers generated for the customer can be verified.
      summary: Retrieve Certificate
      operationId: authn/certs/{id}
      parameters:
        - name: id
          in: path
          description: The unique identifier of the certificate to be retrieved
          required: true
          schema:
            type: string
      x-code-samples:
        - lang: Curl
          source: |
            curl --location --request GET 'http://{hostname}:{port}/{optionalRoutingPath}/authn/certs/20001' \
            --header 'Accept: application/json'     
        - lang: Java
          source: |
            Unirest.setTimeouts(0, 0);
            HttpResponse<String> response = Unirest.get("http://{hostname}:{port}/{optionalRoutingPath}/authn/certs/20001")
              .header("Accept", "application/json")
              .asString();
        - lang: Python
          source: |
            import requests

            url = "http://{hostname}:{port}/{optionalRoutingPath}/authn/certs/20001"

            payload={}
            headers = {
              'Accept': 'application/json'
            }

            response = requests.request("GET", url, headers=headers, data=payload)

            print(response.text)
        - lang: Ruby
          source: |
            require "uri"
            require "net/http"

            url = URI("http://{hostname}:{port}/{optionalRoutingPath}/authn/certs/20001")

            https = Net::HTTP.new(url.host, url.port)
            https.use_ssl = true

            request = Net::HTTP::Get.new(url)
            request["Accept"] = "application/json"

            response = https.request(request)
            puts response.read_body
      responses:
        200:
          description: successful operation
          content:
            text/plain:
              schema:
                description: | 
                  The successful response message is as below
                  ```
                  HTTP/1.1 200 OK
                  Content-Type: application/json;charset=UTF-8
                  Content-Length: 1066
                  -----BEGIN CERTIFICATE-----
                  MIIC3DCCAcSgAwIBAgIIBVau5WIgYr4wDQYJKoZIhvcNAQELBQAwPTEUMBIGA1UEAwwLQ2FsbEF1
                  dGhuQ0ExGDAWBgNVBAoMD05ldXN0YXIgSU9UIExhYjELMAkGA1UEBhMCVVMwHhcNMjAwNzEwMTg0
                  NTIyWhcNMjIwNzEwMTg0NTIyWjB4MRwwGgYDVQQDDBN0ZXN0Lm5ldXN0YXJsYWIuYml6MRQwEgYD
                  VQQLDAtTbWFydElEIElPVDEVMBMGA1UECgwMTmV1U3RhciBJbmMuMREwDwYDVQQHDAhTdGVybGlu
                  ZzELMAkGA1UECAwCVkExCzAJBgNVBAYTAlVTMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAE+uA9
                  IAiTmofZeO68tU5HcevE99nA/FNmBf5nJXFyotjje+2qj55yZTXw7n0hBbvFGNtuk08XyioVwwBh
                  oIW4uKNwMG4wHQYDVR0OBBYEFN5vq8ArhfTLjiEqr9YFIXennAA/MAwGA1UdEwEB/wQCMAAwHwYD
                  VR0jBBgwFoAUA5OlO5suixTWxM9Yz0bbgzFU0MgwDgYDVR0PAQH/BAQDAgeAMA4GCCsGAQUFBwEa
                  BAIwADANBgkqhkiG9w0BAQsFAAOCAQEAeT9nsp/6EfpdG/Yv+pYu751IF5bGK9fP3XOi89QI4Ode
                  zrExFkUDhYU8hRXg2EhPDKY1t+LwcEEluBba/osgNZpx9VwFAhctFXVr0m9k4fVSzGLbxvc3BpyH
                  7WVkUmBfDSAVK5UtSafo9VgqTm5AAYTEUUnx6Pn+RWFAk7DhGAv/uP1BCAsZBE51dL4sK5IYIPYC
                  PKkugQY+hPk+x+576TFUdjcmBJeq3O/YD98f59DTP2aRVfKdbbWI1DWG6wOwjIUYxzYaprd/U5IC
                  f6O8TLlYMoUMmbBFHBYOSI4/kb4KmM3l8CCTrvvyVtcwF+EX/D3B/2ob87UmRkqduhZDJA==
                  -----END CERTIFICATE-----
                  ```
                type: string
                example: '-----BEGIN CERTIFICATE-----MII...-----END CERTIFICATE-----'
        403:
          description: Error Response
          content: 
            application/json: 
              schema: 
                $ref: '#/components/schemas/ErrorResponseCerts400'
  /authn/error:
    get:
      tags:
      - Error
      summary: Retreive Errors
      operationId: authn/error
      description: |
        Returns the list of all potential errors that could be generated, so that an API consumer can process those errors accordingly.
      x-code-samples:
        - lang: Curl
          source: |
            curl --location --request GET 'http://{hostname}:{port}/{optionalRoutingPath}/authn/error' \
            --header 'Accept: application/json'
        - lang: Java
          source: |
            Unirest.setTimeouts(0, 0);
            HttpResponse<String> response = Unirest.get("http://{hostname}:{port}/{optionalRoutingPath}/authn/error")
              .header("Accept", "application/json")
              .asString();
        - lang: Python
          source: |
            import requests

            url = "http://{hostname}:{port}/{optionalRoutingPath}/authn/error"

            payload={}
            headers = {
              'Accept': 'application/json'
            }

            response = requests.request("GET", url, headers=headers, data=payload)

            print(response.text)
        - lang: Ruby
          source: |
            require "uri"
            require "net/http"

            url = URI("http://{hostname}:{port}/{optionalRoutingPath}/authn/error")

            https = Net::HTTP.new(url.host, url.port)
            https.use_ssl = true

            request = Net::HTTP::Get.new(url)
            request["Accept"] = "application/json"

            response = https.request(request)
            puts response.read_body
      responses:
        200:
          description: successful operation
          content:
            application/json: 
              schema: 
                $ref: '#/components/schemas/ErrorAPISuccessResponse'
 
 ## RESTful API Verification Service
    Currently, a RESTful API client is required to provide an 'apiKey' query parameter with a pre-provisioned value to access API calls that are restricted. If the 'apiKey' parameter is not specified, the client IP address may be used as the backup authentication mechanism if pre-provisioned. 
    
  /verify/identity:
    post:
      tags:
      - Verifies SIP Identity Headers
      description: | 
        This API uses the following data elements in SIP INVITE messages for SIP Identity header verification, in addition to the required 'apiKey' query parameter for uniquely identifying an API client.
        Three different API entry points are defined for SIP Identity header verification:
          * Accepts requests in JSON format and produces responses in JSON format (J-J)
          * Accepts SIP INVITE messages and produces responses in JSON format (S-J)
          * Accepts SIP INVITE messages and produces responses in SIP format (S-S)
      summary: Identity
      operationId: verify/identity
      parameters:
        - in: query
          name: apiKey
          required: true
          schema:
            type: string
          description: The API key uniquely identifying the API client. Cannot be null or empty
        - name: status
          in: query
          description: The verification status requirement
          required: false
          style: form
          schema:
            type: string
        - name: origcc
          in: query
          description: Default country codes for the originator telephone number
          required: false
          style: form
          schema:
            type: string
        - name: destcc
          in: query
          required: false
          description: Default country code for the destination telephone number
          schema:
            type: string
        - name: cnam
          in: query
          description: Flag for performing CNAM lookup
          required: false
          style: form
          schema:
            type: boolean
        - name: ecnam
          in: query
          description: Flag for performing ECNAM (or RCD) lookup
          required: false
          style: form
          schema:
            type: boolean
        - name: robocall
          in: query
          description: Flag for returning Robocall Call Insight data
          required: false
          style: form
          schema:
            type: boolean
        - name: cnamPrefix
          in: query
          description: Prefix applied to to CNAM data field, indicating if SIP Identity header is verified or not
          required: false
          style: form
          schema:
            type: string
        - name: verstat
          in: query
          description: Verstat value as defined in ETSI TS 124 299, for performing tagging and SIP Identity headers optionally removed
          required: false
          style: form
          schema:
            type: string
        - name: identity
          in: query
          description: Boolean flag for including SIP Identity header when the "verstat" parameter is specified, with the default value as "true"
          required: false
          style: form
          schema:
            type: string
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VerifyIdentity'
          text/plain:
            schema:
              type: string
              example: 'INVITE sip:+15715550001@proxy.example.com;transport=UDP SIP/2.0
              From: "alice" <sip:+15715550000@example.com>;tag=1f4e4f40
              To: "bob" <sip:+15715550001@example.com>
              Date: Thu, 17 Aug 2017 15:09:27 GMT
              Identity: ey.x.oQ;info=<http://www.example.com/cert/123>;alg=ES256'
            required: true
        required: true
      x-code-samples:
        - lang: Curl (J-J)
          source: |
            curl --location --request POST 'http://{hostname}:{port}/{optionalRoutingPath}/verify/identity?apiKey=%3CapiKey1%3E' \
            --header 'Content-Type: application/json' \
            --header 'Accept: application/json' \
            --data-raw '{
              "from" : ""alice" <sip:+15715550000@example.com>",
              "to" : ""bob" <sip:+15715550001@example.com>",
              "identity" : [ "eyJhbGciOiJFUzI1NiIsInR5cCI6InBhc3Nwb3J0IiwieDV1IjoiaHR0cDovL2NhLmV4YW1wbGUuY29tL3Rlc3QuZGVyIn0.eyJkZXN0Ijp7InRuIjpbIjE1NzE1NTUwMDAxIl19LCJpYXQiOjE2MTg1NDE4MTYsIm9yaWciOnsidG4iOiIxNTcxNTU1MDAwMCJ9fQ.amEa2CXEarp4H6S2EqUh-fj-8oCKQHpLXI6xL--KgvP_tI2bdfjXDWlABGpxLz2qwkCKBe0tCIFvMHLgeVsOTw;info=<http://ca.example.com/test.der>;alg=ES256" ]
            }'
        - lang: Curl (S-J)
          source: |
            curl --location --request POST 'http://{hostname}:{port}/{optionalRoutingPath}/verify/identity?apiKey=%3CapiKey1%3E&status=all&origcc=1,44&destcc=1&cnam=true&ecnam=true&robocall=true' \
            --header 'Content-Type: text/plain' \
            --header 'Accept: application/json' \
            --data-raw 'INVITE sip:+15715550001@proxy.example.com;transport=UDP SIP/2.0
            v: SIP/2.0/UDP proxy.example.com:39089;branch=z9hG4bK-d8754za
            Max-Forwards: 70
            m: "alice" <sip:alice@proxy.example.com:39089;transport=UDP>
            f: "alice" <sip:+15715550000@example.com>;tag=1f4e4f40
            t: "bob" <sip:+15715550001@example.com>
            Date: Fri, 16 Apr 2021 02:56:54 GMT
            i: YzRlZDFlYzYyM2IwOTdlMzk0MDA3MTRmZmY3OGIzODM.
            y: eyJhbGciOiJFUzI1NiIsInBwdCI6InNoYWtlbiIsInR5cCI6InBhc3Nwb3J0IiwieDV1IjoiaHR0cDovL2NhLmV4YW1wbGUuY29tL3Rlc3QuZGVyIn0.eyJhdHRlc3QiOiJBIiwiZGVzdCI6eyJ0biI6WyIxNTcxNTU1MDAwMSJdfSwiaWF0IjoxNjE4NTQxODE0LCJta3kiOlt7ImFsZyI6IlNIQS0xIiwiZGlnIjoiNEFBREI5QjEzRjgyMTgzQjU0MDIxMkRGM0U1RDQ5NkIxOUU1N0NBQiJ9LHsiYWxnIjoiU0hBLTI1NiIsImRpZyI6IjM2M0JBRTEyOTU5NUY1OTcyREY3RTA4NEZFQ0RGMUJDQUQ3QTcwNjRGN0U3NEY3RUE2MDIwNjBFMzc1NENGRjcifV0sIm9yaWciOnsidG4iOiIxNzAzNTU1MDAwMSJ9LCJvcmlnaWQiOiIxMjM0NTYtQUJDRC05OTk5OTkifQ.yd8hFUIVEbXiZI4NTbLeepUkuEpkKAo_DQZmc2BivqJxGAnbZO2j4iljprTrka-3jLOj6ZSXo-y91879cUYZ-A;info=<http://ca.example.com/test.der>;alg=ES256;ppt="shaken"
            P-Asserted-Identity: "Alice" <tel:+17035550001>
            P-Asserted-Identity: "Alice" <sip:+17035550001@example.com>
            CSeq: 2 INVITE
            c: application/sdp
            User-Agent: Z 3.3.25608 r25552
            k: replaces, norefersub, extended-refer, timer
            Allow-Events: presence, kpml
            l: 439
            v=0
            o=Z 0 0 IN IP4 10.31.32.251
            s=Z
            c=IN IP4 10.31.32.251
            t=0 0
            m=audio 8000 RTP/AVP 8 0 3 110 98 101
            a=fingerprint:SHA-1 4A:AD:B9:B1:3F:82:18:3B:54:02:12:DF:3E:5D:49:6B:19:E5:7C:AB
            a=fingerprint:SHA-256 36:3B:AE:12:95:95:F5:97:2D:F7:E0:84:FE:CD:F1:BC:AD:7A:70:64:F7:E7:4F:7E:A6:02:06:0E:37:54:CF:F7
            a=rtpmap:110 speex/8000
            a=rtpmap:98 iLBC/8000
            a=fmtp:98 mode=20
            a=rtpmap:101 telephone-event/8000
            a=fmtp:101 0-15
            a=sendrecv
            '
        - lang: Curl (S-S)
          source: |
            curl --location --request POST 'http://{hostname}:{port}/{optionalRoutingPath}/verify/identity?apiKey=%3CapiKey1%3E&status=all&origcc=1,44&destcc=1&cnam=true&ecnam=true&robocall=true&cnamPrefix=%E2%9C%94,%E2%9C%98&verstat=TN-Validation-Passed&identity=true' \
            --header 'Content-Type: text/plain' \
            --header 'Accept: text/plain' \
            --data-raw 'INVITE sip:+15715550001@proxy.example.com;transport=UDP SIP/2.0
            v: SIP/2.0/UDP proxy.example.com:39089;branch=z9hG4bK-d8754za
            Max-Forwards: 70
            m: "alice" <sip:alice@proxy.example.com:39089;transport=UDP>
            f: "alice" <sip:+15715550000@example.com>;tag=1f4e4f40
            t: "bob" <sip:+15715550001@example.com>
            Date: Fri, 16 Apr 2021 02:56:52 GMT
            i: YzRlZDFlYzYyM2IwOTdlMzk0MDA3MTRmZmY3OGIzODM.
            y: eyJhbGciOiJFUzI1NiIsInBwdCI6InNoYWtlbiIsInR5cCI6InBhc3Nwb3J0IiwieDV1IjoiaHR0cDovL2NhLmV4YW1wbGUuY29tL3Rlc3QuZGVyIn0.eyJhdHRlc3QiOiJBIiwiZGVzdCI6eyJ0biI6WyIxNTcxNTU1MDAwMSJdfSwiaWF0IjoxNjE4NTQxODEyLCJta3kiOlt7ImFsZyI6IlNIQS0xIiwiZGlnIjoiNEFBREI5QjEzRjgyMTgzQjU0MDIxMkRGM0U1RDQ5NkIxOUU1N0NBQiJ9LHsiYWxnIjoiU0hBLTI1NiIsImRpZyI6IjM2M0JBRTEyOTU5NUY1OTcyREY3RTA4NEZFQ0RGMUJDQUQ3QTcwNjRGN0U3NEY3RUE2MDIwNjBFMzc1NENGRjcifV0sIm9yaWciOnsidG4iOiIxNzAzNTU1MDAwMSJ9LCJvcmlnaWQiOiIxMjM0NTYtQUJDRC05OTk5OTkifQ.HJzTVP6kSWIGrrAW23GJX920-WXqV7lSsLr4WzUlIJWdCVaLFNBVfze3PJ0Bq9qQnvhIZztjrdUR_hAUseaA8g;info=<http://ca.example.com/test.der>;alg=ES256;ppt="shaken"
            P-Asserted-Identity: "Alice" <tel:+17035550001>
            P-Asserted-Identity: "Alice" <sip:+17035550001@example.com>
            CSeq: 2 INVITE
            c: application/sdp
            User-Agent: Z 3.3.25608 r25552
            k: replaces, norefersub, extended-refer, timer
            Allow-Events: presence, kpml
            l: 439
            v=0
            o=Z 0 0 IN IP4 10.31.32.251
            s=Z
            c=IN IP4 10.31.32.251
            t=0 0
            m=audio 8000 RTP/AVP 8 0 3 110 98 101
            a=fingerprint:SHA-1 4A:AD:B9:B1:3F:82:18:3B:54:02:12:DF:3E:5D:49:6B:19:E5:7C:AB
            a=fingerprint:SHA-256 36:3B:AE:12:95:95:F5:97:2D:F7:E0:84:FE:CD:F1:BC:AD:7A:70:64:F7:E7:4F:7E:A6:02:06:0E:37:54:CF:F7
            a=rtpmap:110 speex/8000
            a=rtpmap:98 iLBC/8000
            a=fmtp:98 mode=20
            a=rtpmap:101 telephone-event/8000
            a=fmtp:101 0-15
            a=sendrecv
            '
        - lang: Java
          source: |
            Unirest.setTimeouts(0, 0);
            HttpResponse<String> response = Unirest.post("http://{hostname}:{port}/{optionalRoutingPath}/verify/identity?apiKey=%3CapiKey1%3E")
              .header("Content-Type", "application/json")
              .header("Accept", "application/json")
              .body("{\n  \"from\" : \"\"alice\" <sip:+15715550000@example.com>\",\n  \"to\" : \"\"bob\" <sip:+15715550001@example.com>\",\n  \"identity\" : [ \"eyJhbGciOiJFUzI1NiIsInR5cCI6InBhc3Nwb3J0IiwieDV1IjoiaHR0cDovL2NhLmV4YW1wbGUuY29tL3Rlc3QuZGVyIn0.eyJkZXN0Ijp7InRuIjpbIjE1NzE1NTUwMDAxIl19LCJpYXQiOjE2MTg1NDE4MTYsIm9yaWciOnsidG4iOiIxNTcxNTU1MDAwMCJ9fQ.amEa2CXEarp4H6S2EqUh-fj-8oCKQHpLXI6xL--KgvP_tI2bdfjXDWlABGpxLz2qwkCKBe0tCIFvMHLgeVsOTw;info=<http://ca.example.com/test.der>;alg=ES256\" ]\n}")
              .asString();
        - lang: Python
          source: |
            import requests

            url = "http://{hostname}:{port}/{optionalRoutingPath}/verify/identity?apiKey=%3CapiKey1%3E"

            payload="{\n  \"from\" : \"\"alice\" <sip:+15715550000@example.com>\",\n  \"to\" : \"\"bob\" <sip:+15715550001@example.com>\",\n  \"identity\" : [ \"eyJhbGciOiJFUzI1NiIsInR5cCI6InBhc3Nwb3J0IiwieDV1IjoiaHR0cDovL2NhLmV4YW1wbGUuY29tL3Rlc3QuZGVyIn0.eyJkZXN0Ijp7InRuIjpbIjE1NzE1NTUwMDAxIl19LCJpYXQiOjE2MTg1NDE4MTYsIm9yaWciOnsidG4iOiIxNTcxNTU1MDAwMCJ9fQ.amEa2CXEarp4H6S2EqUh-fj-8oCKQHpLXI6xL--KgvP_tI2bdfjXDWlABGpxLz2qwkCKBe0tCIFvMHLgeVsOTw;info=<http://ca.example.com/test.der>;alg=ES256\" ]\n}"
            headers = {
              'Content-Type': 'application/json',
              'Accept': 'application/json'
            }

            response = requests.request("POST", url, headers=headers, data=payload)

            print(response.text)
        - lang: Ruby
          source: |
            require "uri"
            require "net/http"

            url = URI("http://{hostname}:{port}/{optionalRoutingPath}/verify/identity?apiKey=%3CapiKey1%3E")

            https = Net::HTTP.new(url.host, url.port)
            https.use_ssl = true

            request = Net::HTTP::Post.new(url)
            request["Content-Type"] = "application/json"
            request["Accept"] = "application/json"
            request.body = "{\n  \"from\" : \"\"alice\" <sip:+15715550000@example.com>\",\n  \"to\" : \"\"bob\" <sip:+15715550001@example.com>\",\n  \"identity\" : [ \"eyJhbGciOiJFUzI1NiIsInR5cCI6InBhc3Nwb3J0IiwieDV1IjoiaHR0cDovL2NhLmV4YW1wbGUuY29tL3Rlc3QuZGVyIn0.eyJkZXN0Ijp7InRuIjpbIjE1NzE1NTUwMDAxIl19LCJpYXQiOjE2MTg1NDE4MTYsIm9yaWciOnsidG4iOiIxNTcxNTU1MDAwMCJ9fQ.amEa2CXEarp4H6S2EqUh-fj-8oCKQHpLXI6xL--KgvP_tI2bdfjXDWlABGpxLz2qwkCKBe0tCIFvMHLgeVsOTw;info=<http://ca.example.com/test.der>;alg=ES256\" ]\n}"

            response = https.request(request)
            puts response.read_body
      responses:
        200:
          description: |
            successful operation
          content: 
            application/json: 
              schema: 
                $ref: '#/components/schemas/VerifyResponse'
            text/plain:
              schema:
                type: string
                example: 'SIP sip:17035550021@proxy.example.com;transport=UDP SIP/2.0
                          From: "✔Alice" <sip:+15714345500@example.com>
                          To: "Bob" <sip:+447035550000@example.com>
                          Identity: ey.x.oQ;info=<http://www.example.com/cert/123>;alg=ES256
                          Date: Fri, 11 Aug 2017 04:17:14 GMT'
        400:
          description: Error Response
          content: 
            application/json: 
              schema: 
                $ref: '#/components/schemas/VerifyErrorResponse400'
            text/plain:
              schema:
                type: string
                example: 'HTTP/1.1 403 Forbidden
                          Content-Type: text/plain;charset=UTF-8
                          Content-Length: 197

                          SIP/2.0 437 Credential has expired
                          From: "Alice" <sip:+15714345500@example.com>
                          To: "Bob" <sip:+447035550000@example.com>
                          Reason: SIP;cause=437;text="Credential has expired"
                          Content-Length: 0'
  /verify/identity/proxy/{addr}/{port}:
    post:
      tags:
      - Verifies SIP Identity Headers
      summary: Proxy Identity
      operationId: post/verify/identity/proxy/{addr}/{port}
      description: |
        This API entry point verifies SIP Identity headers by accepting request in SIP INVITE message format and produces response in JSON Format for SIP Proxies. 
      parameters:
        - in: query
          name: apiKey
          required: true
          schema:
            type: string
          description: The API key uniquely identifying the API client. Cannot be null or empty
        - name: addr
          in: path
          description: The remote IP address from which the SIP INVITE message is originated
          required: true
          schema:
            type: string
        - name: port
          in: path
          description: The remote port from which the SIP INVITE message is originated
          required: true
          schema:
            type: string
      requestBody:
        description: ''
        content:
          text/plain:
            schema:
              type: string
              example: 'SIP sip:17035550021@proxy.example.com;transport=UDP SIP/2.0
                        From: Alice <sip:+15714345500@example.com>
                        To: Bob <sip:+447035550000@example.com>
                        Identity: ey.x.oQ;info=<http://.../cert/123>;alg=ES256'
        required: true
      x-code-samples:
        - lang: Curl
          source: |
            curl --location --request POST 'http://{hostname}:{port}/{optionalRoutingPath}/verify/identity/proxy/127.0.0.2/5060?apiKey=%3CapiKey7%3E' \
            --header 'Content-Type: text/plain' \
            --header 'Accept: application/json' \
            --data-raw 'INVITE sip:+15715550001@proxy.example.com;transport=UDP SIP/2.0
            Via: SIP/2.0/UDP proxy.example.com:39089;branch=z9hG4bK-d8754za
            Max-Forwards: 70
            Contact: "alice" <sip:alice@proxy.example.com:39089;transport=UDP>
            From: "alice" <sip:+15715550000@example.com>;tag=1f4e4f40
            To: "bob" <sip:+15715550001@example.com>
            Date: Fri, 16 Apr 2021 02:56:56 GMT
            Call-ID: YzRlZDFlYzYyM2IwOTdlMzk0MDA3MTRmZmY3OGIzODM.
            Identity: eyJhbGciOiJFUzI1NiIsInR5cCI6InBhc3Nwb3J0IiwieDV1IjoiaHR0cDovL2NhLmV4YW1wbGUuY29tL3Rlc3QuZGVyIn0.eyJkZXN0Ijp7InRuIjpbIjE1NzE1NTUwMDAxIl19LCJpYXQiOjE2MTg1NDE4MTYsIm9yaWciOnsidG4iOiIxNTcxNTU1MDAwMCJ9fQ.l0M2I9W8agfAWSeYOXxLu5XAPYgUMPSH53daRzsABYeT9JcxPwIPSY2O1FFhqyUjBz_P1Lm6Bhe3I-ktbjI6Zg;info=<http://ca.example.com/test.der>;alg=ES256
            CSeq: 2 INVITE
            Content-Type: application/sdp
            User-Agent: Z 3.3.25608 r25552
            Supported: replaces, norefersub, extended-refer, timer
            Allow-Events: presence, kpml
            Content-Length: 239

            v=0
            o=Z 0 0 IN IP4 10.31.32.251
            s=Z
            c=IN IP4 10.31.32.251
            t=0 0
            m=audio 8000 RTP/AVP 8 0 3 110 98 101
            a=rtpmap:110 speex/8000
            a=rtpmap:98 iLBC/8000
            a=fmtp:98 mode=20
            a=rtpmap:101 telephone-event/8000
            a=fmtp:101 0-15
            a=sendrecv
            '
        - lang: Java
          source: |
            Unirest.setTimeouts(0, 0);
            HttpResponse<String> response = Unirest.post("http://{hostname}:{port}/{optionalRoutingPath}/verify/identity/proxy/127.0.0.2/5060?apiKey=%3CapiKey7%3E")
              .header("Content-Type", "text/plain")
              .header("Accept", "application/json")
              .body("INVITE sip:+15715550001@proxy.example.com;transport=UDP SIP/2.0\nVia: SIP/2.0/UDP proxy.example.com:39089;branch=z9hG4bK-d8754za\nMax-Forwards: 70\nContact: \"alice\" <sip:alice@proxy.example.com:39089;transport=UDP>\nFrom: \"alice\" <sip:+15715550000@example.com>;tag=1f4e4f40\nTo: \"bob\" <sip:+15715550001@example.com>\nDate: Fri, 16 Apr 2021 02:56:56 GMT\nCall-ID: YzRlZDFlYzYyM2IwOTdlMzk0MDA3MTRmZmY3OGIzODM.\nIdentity: eyJhbGciOiJFUzI1NiIsInR5cCI6InBhc3Nwb3J0IiwieDV1IjoiaHR0cDovL2NhLmV4YW1wbGUuY29tL3Rlc3QuZGVyIn0.eyJkZXN0Ijp7InRuIjpbIjE1NzE1NTUwMDAxIl19LCJpYXQiOjE2MTg1NDE4MTYsIm9yaWciOnsidG4iOiIxNTcxNTU1MDAwMCJ9fQ.l0M2I9W8agfAWSeYOXxLu5XAPYgUMPSH53daRzsABYeT9JcxPwIPSY2O1FFhqyUjBz_P1Lm6Bhe3I-ktbjI6Zg;info=<http://ca.example.com/test.der>;alg=ES256\nCSeq: 2 INVITE\nContent-Type: application/sdp\nUser-Agent: Z 3.3.25608 r25552\nSupported: replaces, norefersub, extended-refer, timer\nAllow-Events: presence, kpml\nContent-Length: 239\n\nv=0\no=Z 0 0 IN IP4 10.31.32.251\ns=Z\nc=IN IP4 10.31.32.251\nt=0 0\nm=audio 8000 RTP/AVP 8 0 3 110 98 101\na=rtpmap:110 speex/8000\na=rtpmap:98 iLBC/8000\na=fmtp:98 mode=20\na=rtpmap:101 telephone-event/8000\na=fmtp:101 0-15\na=sendrecv\n")
              .asString();
        - lang: Python
          source: |
            import requests

            url = "http://{hostname}:{port}/{optionalRoutingPath}/verify/identity/proxy/127.0.0.2/5060?apiKey=%3CapiKey7%3E"

            payload="INVITE sip:+15715550001@proxy.example.com;transport=UDP SIP/2.0\nVia: SIP/2.0/UDP proxy.example.com:39089;branch=z9hG4bK-d8754za\nMax-Forwards: 70\nContact: \"alice\" <sip:alice@proxy.example.com:39089;transport=UDP>\nFrom: \"alice\" <sip:+15715550000@example.com>;tag=1f4e4f40\nTo: \"bob\" <sip:+15715550001@example.com>\nDate: Fri, 16 Apr 2021 02:56:56 GMT\nCall-ID: YzRlZDFlYzYyM2IwOTdlMzk0MDA3MTRmZmY3OGIzODM.\nIdentity: eyJhbGciOiJFUzI1NiIsInR5cCI6InBhc3Nwb3J0IiwieDV1IjoiaHR0cDovL2NhLmV4YW1wbGUuY29tL3Rlc3QuZGVyIn0.eyJkZXN0Ijp7InRuIjpbIjE1NzE1NTUwMDAxIl19LCJpYXQiOjE2MTg1NDE4MTYsIm9yaWciOnsidG4iOiIxNTcxNTU1MDAwMCJ9fQ.l0M2I9W8agfAWSeYOXxLu5XAPYgUMPSH53daRzsABYeT9JcxPwIPSY2O1FFhqyUjBz_P1Lm6Bhe3I-ktbjI6Zg;info=<http://ca.example.com/test.der>;alg=ES256\nCSeq: 2 INVITE\nContent-Type: application/sdp\nUser-Agent: Z 3.3.25608 r25552\nSupported: replaces, norefersub, extended-refer, timer\nAllow-Events: presence, kpml\nContent-Length: 239\n\nv=0\no=Z 0 0 IN IP4 10.31.32.251\ns=Z\nc=IN IP4 10.31.32.251\nt=0 0\nm=audio 8000 RTP/AVP 8 0 3 110 98 101\na=rtpmap:110 speex/8000\na=rtpmap:98 iLBC/8000\na=fmtp:98 mode=20\na=rtpmap:101 telephone-event/8000\na=fmtp:101 0-15\na=sendrecv\n"
            headers = {
              'Content-Type': 'text/plain',
              'Accept': 'application/json'
            }

            response = requests.request("POST", url, headers=headers, data=payload)

            print(response.text)
        - lang: Ruby
          source: |
            require "uri"
            require "net/http"

            url = URI("http://{hostname}:{port}/{optionalRoutingPath}/verify/identity/proxy/127.0.0.2/5060?apiKey=%3CapiKey7%3E")

            https = Net::HTTP.new(url.host, url.port)
            https.use_ssl = true

            request = Net::HTTP::Post.new(url)
            request["Content-Type"] = "text/plain"
            request["Accept"] = "application/json"
            request.body = "INVITE sip:+15715550001@proxy.example.com;transport=UDP SIP/2.0\nVia: SIP/2.0/UDP proxy.example.com:39089;branch=z9hG4bK-d8754za\nMax-Forwards: 70\nContact: \"alice\" <sip:alice@proxy.example.com:39089;transport=UDP>\nFrom: \"alice\" <sip:+15715550000@example.com>;tag=1f4e4f40\nTo: \"bob\" <sip:+15715550001@example.com>\nDate: Fri, 16 Apr 2021 02:56:56 GMT\nCall-ID: YzRlZDFlYzYyM2IwOTdlMzk0MDA3MTRmZmY3OGIzODM.\nIdentity: eyJhbGciOiJFUzI1NiIsInR5cCI6InBhc3Nwb3J0IiwieDV1IjoiaHR0cDovL2NhLmV4YW1wbGUuY29tL3Rlc3QuZGVyIn0.eyJkZXN0Ijp7InRuIjpbIjE1NzE1NTUwMDAxIl19LCJpYXQiOjE2MTg1NDE4MTYsIm9yaWciOnsidG4iOiIxNTcxNTU1MDAwMCJ9fQ.l0M2I9W8agfAWSeYOXxLu5XAPYgUMPSH53daRzsABYeT9JcxPwIPSY2O1FFhqyUjBz_P1Lm6Bhe3I-ktbjI6Zg;info=<http://ca.example.com/test.der>;alg=ES256\nCSeq: 2 INVITE\nContent-Type: application/sdp\nUser-Agent: Z 3.3.25608 r25552\nSupported: replaces, norefersub, extended-refer, timer\nAllow-Events: presence, kpml\nContent-Length: 239\n\nv=0\no=Z 0 0 IN IP4 10.31.32.251\ns=Z\nc=IN IP4 10.31.32.251\nt=0 0\nm=audio 8000 RTP/AVP 8 0 3 110 98 101\na=rtpmap:110 speex/8000\na=rtpmap:98 iLBC/8000\na=fmtp:98 mode=20\na=rtpmap:101 telephone-event/8000\na=fmtp:101 0-15\na=sendrecv\n"

            response = https.request(request)
            puts response.read_body
      responses:
        200:
          description: successful operation
          content:
            application/json: 
              schema: 
                $ref: '#/components/schemas/SuccessResponseProxy'
            text/plain:
              schema:
                type: string
                example: 'INVITE sip:17035550021@proxy.example.com;transport=UDP SIP/2.0From: "Alice" <sip:+15714345500@example.com>Identity: eyJhbGciOiJFUzI1NiIsInBwdCI6InNoYWtlbiIsInR5cCI6InBhc3Nwb3J0IiwieDV1IjoiaHR0cHM6Ly9jYS1hdXRobi5uZXVzdGFybGFiLmJpei9jY2lkL2F1dGhuL3YyL2NlcnRzLzIwMDAxLjEwMDAxIn0.eyJhdHRlc3QiOiJBIiwiZGVzdCI6eyJ0biI6WyI0NDcwMzU1NTAwMDAiXX0sImlhdCI6MTYyMTAxMTQyNSwib3JpZyI6eyJ0biI6IjE1NzE0MzQ1NTAwIn0sIm9yaWdpZCI6Ijc4MzZlYzFkMDYwNzRkNjg4YjYyYzFlYTVlYmQxOTM5In0.RIDQYZP0SNd7ejjJGlcYLQ-55XssLVG5hJ5001v-unKFbD349VVYLderLBt_4h-eCgAcWIsuAW6YSMUqfPk8PA;info=<http://{hostname}:{port}/{optionalRoutingPath}/authn/certs/20001.10001>;alg=ES256;ppt="shaken"Date: Fri, 14 May 2021 16:57:05 GMTTo: "Bob" <sip:+447035550000@example.com>'
        403:
          description: Error Response
          content: 
            application/json: 
              schema: 
                $ref: '#/components/schemas/ErrorResponseProxy403'
    get:
      tags:
      - Verifies SIP Identity Headers
      summary: Proxy Identity
      operationId: get/verify/identity/proxy/{addr}/{port}
      description: |
        This API entry point returns next hop and policy data in JSON Format for SIP Proxies
      parameters:
        - in: query
          name: apiKey
          required: true
          schema:
            type: string
          description: The API key uniquely identifying the API client. Cannot be null or empty
        - name: addr
          in: path
          description: The remote IP address from which the SIP INVITE message is originated
          required: true
          schema:
            type: string
        - name: port
          in: path
          description: The remote port from which the SIP INVITE message is originated
          required: true
          schema:
            type: string
      x-code-samples:
        - lang: Curl
          source: |
            curl --location --request GET 'http://{hostname}:{port}/{optionalRoutingPath}/authn/identity/proxy/192.168.1.1/5060?apiKey=%3CapiKey1%3E' \
            --header 'Accept: application/json'
        - lang: Java
          source: |
            Unirest.setTimeouts(0, 0);
            HttpResponse<String> response = Unirest.get("http://{hostname}:{port}/{optionalRoutingPath}/authn/identity/proxy/192.168.1.1/5060?apiKey=%3CapiKey1%3E")
              .header("Accept", "application/json")
              .asString();
        - lang: Python
          source: |
            import requests

            url = "http://{hostname}:{port}/{optionalRoutingPath}/authn/identity/proxy/192.168.1.1/5060?apiKey=%3CapiKey1%3E"

            payload={}
            headers = {
              'Accept': 'application/json'
            }

            response = requests.request("GET", url, headers=headers, data=payload)

            print(response.text)      
        - lang: Ruby
          source: |
            require "uri"
            require "net/http"

            url = URI("http://{hostname}:{port}/{optionalRoutingPath}/authn/identity/proxy/192.168.1.1/5060?apiKey=%3CapiKey1%3E")

            https = Net::HTTP.new(url.host, url.port)
            https.use_ssl = true

            request = Net::HTTP::Get.new(url)
            request["Accept"] = "application/json"

            response = https.request(request)
            puts response.read_body
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    description: | 
                      A successful response in JSON format includes the "status" attribute with a value of "ok". It also contains an optional "next_hop" attribute for indicating the next hop for routing the SIP messages, and an optional "policy" attribute with an opaque string to be consumed by the SIP proxy for manipulating SIP headers and mapping error conditions.
                    example: ok
                    required: true
                  next_hop:
                    type: string
                    description: The URI of next hop
                    example: udp:192.168.1.1:5060
                    required: false
                  policy:
                    type: string
                    description: The policy for processing the SIP message
                    example: '{\"stateful\":false,\"via\":false,\"max_forwards\":false,\"route\":false,\"record_route\":false,\"error_action\":[{\"error\":\"default\",\"action\":\"passthru\"},{\"error\":\"438\",\"action\":\"custom\",\"sip_code\":481}]}"'
                    required: false
        403:
          description: Error Response
          content: 
            application/json: 
              schema: 
                $ref: '#/components/schemas/ErrorResponseProxy403'
  /verify/cnam/tn/{digits}:
    get:
      tags:
      - CNAM
      summary: Perform CNAM queries
      operationId: verify/cnam/tn/{digits}
      description: |
        For a successful CNAM lookup, a response in JSON format will be returned with the "cnam" attribute; otherwise, the "cnam_error" attribute will be returned if there are any errors encountered in the CNAM lookup.
      parameters:
        - in: query
          name: apiKey
          required: true
          schema:
            type: string
          description: The API key uniquely identifying the API client. Cannot be null or empty
        - name: digits
          in: path
          description: The numeric telephone number
          required: true
          schema:
            type: string
      x-code-samples:
        - lang: Curl
          source: |
            curl --location --request GET 'http://{hostname}:{port}/{optionalRoutingPath}/verify/cnam/tn/15715550000?apiKey=%3CapiKey1%3E' \
            --header 'Accept: application/json'
        - lang: Java
          source: |
            Unirest.setTimeouts(0, 0);
            HttpResponse<String> response = Unirest.get("http://{hostname}:{port}/{optionalRoutingPath}/verify/cnam/tn/15715550000?apiKey=%3CapiKey1%3E")
              .header("Accept", "application/json")
              .asString();
        - lang: Python
          source: |
            import requests

            url = "http://{hostname}:{port}/{optionalRoutingPath}/verify/cnam/tn/15715550000?apiKey=%3CapiKey1%3E"

            payload={}
            headers = {
              'Accept': 'application/json'
            }

            response = requests.request("GET", url, headers=headers, data=payload)

            print(response.text)
        - lang: Ruby
          source: |
            require "uri"
            require "net/http"

            url = URI("http://{hostname}:{port}/{optionalRoutingPath}/verify/cnam/tn/15715550000?apiKey=%3CapiKey1%3E")

            https = Net::HTTP.new(url.host, url.port)
            https.use_ssl = true

            request = Net::HTTP::Get.new(url)
            request["Accept"] = "application/json"

            response = https.request(request)
            puts response.read_body
      responses:
        200:
          description: successful operation
          content:
            application/json: 
              schema: 
                type: object
                properties:
                  cnam:
                    type: string
                    description: CNAM data
                    example: Alice In Wonderland
        403:
          description: Error Response
          content: 
            application/json: 
              schema: 
                $ref: '#/components/schemas/CNAM-Error'
  /verify/cnam:
    post:
      tags:
      - CNAM
      summary: Perform CNAM queries
      operationId: verify/cnam
      description: |
        For a successful CNAM lookup, a response in JSON format will be returned with the "cnam" attribute; otherwise, the "cnam_error" attribute will be returned if there are any errors encountered in the CNAM lookup.
      parameters:
        - in: query
          name: apiKey
          required: true
          schema:
            type: string
          description: The API key uniquely identifying the API client. Cannot be null or empty
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CNAM-Input'
        required: true
      x-code-samples:
        - lang: Curl
          source: |
            curl --location --request GET 'http://{hostname}:{port}/{optionalRoutingPath}/verify/cnam/tn/15715550000?apiKey=%3CapiKey1%3E' \
            --header 'Accept: application/json'
        - lang: Java
          source: |
            Unirest.setTimeouts(0, 0);
            HttpResponse<String> response = Unirest.get("http://{hostname}:{port}/{optionalRoutingPath}/verify/cnam/tn/15715550000?apiKey=%3CapiKey1%3E")
              .header("Accept", "application/json")
              .asString();
        - lang: Python
          source: |
            import requests

            url = "http://{hostname}:{port}/{optionalRoutingPath}/verify/cnam/tn/15715550000?apiKey=%3CapiKey1%3E"

            payload={}
            headers = {
              'Accept': 'application/json'
            }

            response = requests.request("GET", url, headers=headers, data=payload)

            print(response.text)
        - lang: Ruby
          source: |
            require "uri"
            require "net/http"

            url = URI("http://{hostname}:{port}/{optionalRoutingPath}/verify/cnam/tn/15715550000?apiKey=%3CapiKey1%3E")

            https = Net::HTTP.new(url.host, url.port)
            https.use_ssl = true

            request = Net::HTTP::Get.new(url)
            request["Accept"] = "application/json"

            response = https.request(request)
            puts response.read_body
      responses:
        200:
          description: successful operation
          content:
            application/json: 
              schema: 
                type: object
                properties:
                  cnam:
                    type: string
                    description: CNAM data
                    example: Alice In Wonderland
        403:
          description: Error Response
          content: 
            application/json: 
              schema: 
                $ref: '#/components/schemas/CNAM-Error'
  /verify/ecnam/tn/{digits}:
    get:
      tags:
      - ECNAM
      summary: Perform ECNAM queries
      operationId: verify/ecnam/tn/{digits}
      description: |
        For a successful ECNAM lookup, a response in JSON format will be returned with the "ecnam" attribute, along with an optional "call_insight" attribute, if any; otherwise, the "ecnam_error" attribute will be returned if there are any errors encountered in the ECNAM lookup.
      parameters:
        - in: query
          name: apiKey
          required: true
          schema:
            type: string
          description: The API key uniquely identifying the API client. Cannot be null or empty
        - name: digits
          in: path
          description: The numeric telephone number
          required: true
          schema:
            type: string
      x-code-samples:
        - lang: Curl
          source: |
            curl --location --request GET 'http://{hostname}:{port}/{optionalRoutingPath}/verify/ecnam/tn/15715550000?apiKey=%3CapiKey1%3E' \
            --header 'Accept: application/json'
        - lang: Java
          source: |
            Unirest.setTimeouts(0, 0);
            HttpResponse<String> response = Unirest.get("http://{hostname}:{port}/{optionalRoutingPath}/verify/ecnam/tn/15715550000?apiKey=%3CapiKey1%3E")
              .header("Accept", "application/json")
              .asString();
        - lang: Python
          source: |
            import http.client

            conn = http.client.HTTPSConnection("ca-verify.orglab.biz")
            payload = ''
            headers = {
              'Accept': 'application/json'
            }
            conn.request("GET", "/ccid/verify/v2/ecnam/tn/15715550000?apiKey=%253CapiKey1%253E", payload, headers)
            res = conn.getresponse()
            data = res.read()
            print(data.decode("utf-8"))
        - lang: Ruby
          source: |
            require "uri"
            require "net/http"

            url = URI("http://{hostname}:{port}/{optionalRoutingPath}/verify/ecnam/tn/15715550000?apiKey=%3CapiKey1%3E")

            https = Net::HTTP.new(url.host, url.port)
            https.use_ssl = true

            request = Net::HTTP::Get.new(url)
            request["Accept"] = "application/json"

            response = https.request(request)
            puts response.read_body
      responses:
        200:
          description: successful operation
          content:
            application/json: 
              schema:
                $ref: '#/components/schemas/ECNAM-Response' 
        403:
          description: Error Response
          content: 
            application/json: 
              schema: 
                $ref: '#/components/schemas/ECNAM-Error'
  /verify/ecnam:
    post:
      tags:
      - ECNAM
      operationId: verify/ecnam
      summary: Perform ECNAM queries
      description: |
        For a successful ECNAM lookup, a response in JSON format will be returned with the "ecnam" attribute, along with an optional "call_insight" attribute, if any; otherwise, the "ecnam_error" attribute will be returned if there are any errors encountered in the ECNAM lookup.
      parameters:
        - in: query
          name: apiKey
          required: true
          schema:
            type: string
          description: The API key uniquely identifying the API client. Cannot be null or empty
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CNAM-Input'
        required: true
      x-code-samples:
        - lang: Curl
          source: |
            curl --location --request POST 'http://{hostname}:{port}/{optionalRoutingPath}/verify/ecnam?apiKey=%3CapiKey1%3E' \
            --header 'Content-Type: application/json' \
            --header 'Accept: application/json' \
            --data-raw '{
              "from" : ""alice" <sip:+15715550000@example.com>"
            }'
        - lang: Java
          source: |
            Unirest.setTimeouts(0, 0);
            HttpResponse<String> response = Unirest.post("http://{hostname}:{port}/{optionalRoutingPath}/verify/ecnam?apiKey=%3CapiKey1%3E")
              .header("Content-Type", "application/json")
              .header("Accept", "application/json")
              .body("{\n  \"from\" : \"\"alice\" <sip:+15715550000@example.com>\"\n}")
              .asString();
        - lang: Python
          source: |
            import requests

            url = "http://{hostname}:{port}/{optionalRoutingPath}/verify/ecnam?apiKey=%3CapiKey1%3E"

            payload="{\n  \"from\" : \"\"alice\" <sip:+15715550000@example.com>\"\n}"
            headers = {
              'Content-Type': 'application/json',
              'Accept': 'application/json'
            }

            response = requests.request("POST", url, headers=headers, data=payload)

            print(response.text)
        - lang: Ruby
          source: |
            require "uri"
            require "net/http"

            url = URI("http://{hostname}:{port}/{optionalRoutingPath}/verify/ecnam?apiKey=%3CapiKey1%3E")

            https = Net::HTTP.new(url.host, url.port)
            https.use_ssl = true

            request = Net::HTTP::Post.new(url)
            request["Content-Type"] = "application/json"
            request["Accept"] = "application/json"
            request.body = "{\n  \"from\" : \"\"alice\" <sip:+15715550000@example.com>\"\n}"

            response = https.request(request)
            puts response.read_body
      responses:
        200:
          description: successful operation
          content:
            application/json: 
              schema:
                $ref: '#/components/schemas/ECNAM-Response' 
        403:
          description: Error Response
          content: 
            application/json: 
              schema: 
                $ref: '#/components/schemas/ECNAM-Error'
  /verify/error:
    get:
      tags:
      - Potential Errors
      summary: Retreive Errors
      operationId: verify/errors
      description: |
        This API entry point is to return the list of all potential errors that could be generated, so that an API consumer can process those errors accordingly.
      x-code-samples:
        - lang: Curl
          source: |
            curl --location --request GET 'http://{hostname}:{port}/{optionalRoutingPath}/verify/error' \
            --header 'Accept: application/json'
        - lang: Java
          source: |
            Unirest.setTimeouts(0, 0);
            HttpResponse<String> response = Unirest.get("http://{hostname}:{port}/{optionalRoutingPath}/verify/error")
              .header("Accept", "application/json")
              .asString();
        - lang: Python
          source: |
            import requests

            url = "http://{hostname}:{port}/{optionalRoutingPath}/verify/error"

            payload={}
            headers = {
              'Accept': 'application/json'
            }

            response = requests.request("GET", url, headers=headers, data=payload)

            print(response.text)
        - lang: Ruby
          source: |
            require "uri"
            require "net/http"

            url = URI("http://{hostname}:{port}/{optionalRoutingPath}/verify/error")

            https = Net::HTTP.new(url.host, url.port)
            https.use_ssl = true

            request = Net::HTTP::Get.new(url)
            request["Accept"] = "application/json"

            response = https.request(request)
            puts response.read_body
      responses:
        200:
          description: successful operation
          content:
            application/json: 
              schema: 
                $ref: '#/components/schemas/ErrorAPISuccessResponse'
components:
  schemas:
    Identity:
      type: object
      properties:
        from:
          type: string
          example: Alice <sip:alice@example.com>
          description: \"From\" header value from SIP INVITE message
        to:
          type: string
          example: Bob <sip:5715550000@example.com>
          description: \"To\" header value from SIP INVITE message
        date:
          type: string
          example: Fri, 11 Aug 2017 04:17:14 GMT
          description: SIP Date header
        compact: 
          type: boolean
          description: Flag for generating compact SIP Identity header, ignored for 'shaken' PASSporT type. If specified, must be true or false
        passport_type: 
          type: string
          example: div
          description: PASSporT type value. If specified, must be 'shaken', 'div', 'rph' or 'rcd'
        diversion: 
          type: string
          example: Bob <sip:7035550000@example.com>;reason=away
          description: First 'Diversion' header value from SIP INVITE message. If specified, must not be empty or blank
        resource_priority: 
          type: array
          description: List of 'Resource-Priority' header values from SIP INVITE message. If specified, must be one as specified in RFC4412 Section 3.1
          items: 
            type: string
            example: [ "ets.0, wps.1", "q735.1" ]
        call_info:
          type: string
          description: The 'Call-Info' header value for extracting jcard_uri and call_reason values used in constructing RCD PASSporT. If specified, must be a valid SIP 'Call-Info' header value
          example: <http://example.com/alice.json>;purpose=jcard;call-reason=Adventure
        call_reason:
          type: string
          description: The call reason to be used for constructing RCD PASSporT
          example: Travel
        caller_name: 
          type: string
          description: The CNAM to be used for constructing RCD PASSporT
          example: Alice Liddell
        jcard: 
          type: string
          description: The JSON string representing a valid JCARD
          example: ['vcard',[['version',{},'text','4.0'],['fn',{},'text','Alice Liddell'],[ 'email',{},'text','alice@example.com']]]
        jcard_uri:
          type: string
          example: cid:123456
          description: The URI identifying the location of the JCARD. If specified, must be valid URI
        rcd_integrity:
          type: boolean
          example: true
          description: The flag for generating RCD PASSporT integrity hash. If specified, must be either true or false, with default as true
        rcd_hash_algorithm:
          type: string
          example: sha384
          description: The algorithm for generating RCD PASSporT integrity hash. If specified, must be one of 'sha256', 'sha384' or 'sha512', with default as 'sha256'
        rcd_signature: 
          type: string
          example: sha512-oODCNbWggTlXfGx1wMpFhdA6Kt2vLjNsRnwks+ffezUUTubjGLSUhqLkSjsE3SZKPWG+gywfYmKjcPtz6uMyog==
          description: The pre-calculated signature of RCD PASSporT integrity hash. If specified, must be not empty or blank and must be a base64 string prefixed with the hash algorithm name
        pai:
          type: array
          description: List of 'P-Asserted-Identity' header values from SIP INVITE message. If specified, must be one as specified in RFC3325 Section 9.1
          items: 
            type: string
            example: ['Alice <tel:+17035550001>', 'Alice <sip:+17035550001@example.com>']
        finger_print:
          type: array
          description: List of SDP 'a=fingerprint' attribute values from SIP INVITE message. If specified, must be one as specified in RFC3325 Section 9.1
          items: 
            type: string
            example: [ {
              'algorithm' : 'SHA-1',
              'digest' : '4A:AD:B9:B1:3F:82:18:3B:54:02:12:DF:3E:5D:49:6B:19:E5:7C:AB'
            }, {
              'algorithm' : 'SHA-256',
              'digest' : '36:3B:AE:12:95:95:F5:97:2D:F7:E0:84:FE:CD:F1:BC:AD:7A:70:64:F7:E7:4F:7E:A6:02:06:0E:37:54:CF:F7'
            } ]
        finger_print[].algorithm:
          type: string
          description: Algorithm name of a SDP 'a=fingerprint' attribute from SIP INVITE message. Cannot be null or empty
        finger_print[].digest: 
          description: Digest value of a SDP 'a=fingerprint' attribute from SIP INVITE message. Cannot be null or empty
          type: string
        orig_cc:
          type: string
          description: Default country code for the origination telephone number. If specified, must be a valid country code
          example: 1
        dest_cc:
          type: string
          description: Default country code for the destination telephone number. If specified, must be a valid country code
          example: 1
        attest: 
          type: string
          description: attest value defined by ATIS SHAKEN extension. If specified, must not be empty or blank. 
          example: A
        origid: 
          type: string
          description: Client supplied request identifier for tracking purpose. If not null, it will be returned back in the response object
          example: 3F9C2836-7E40-11E7-BA58-7831C1B8DEBA
        request_id:
          type: string
          description: ''
          example: X-REQUEST-ID-12345
    SuccessResponse:
      required:
      - identity
      type: object
      properties:
        identity:
          type: string
          example: eyJhbGciOiJFUzI1NiIsInR5cCI6InBhc3Nwb3J0IiwieDV1IjoiaHR0cDovL2NhLWNtcy5uZXVzdGFybGFiLmJpejo4MDAwL2NlcnRzL2QwY2JjM2Y2YmFjMGQwYTFmNzlmNzg2YWE1NTQzYjAxIn0.eyJkZXN0Ijp7InRuIjpbIjE1NzE1NTUwMDAwIl19LCJpYXQiOjE2MjEwMTE0MjYsIm9yaWciOnsidXJpIjoic2lwOmFsaWNlQGV4YW1wbGUuY29tIn19.RC99mmfDvD2BuMZnKwUBGBeG5NyjoQLign1Rjya6rJYv7LShPyDToL7hac1PnurB2kK3ojYVKg0TDMsIOj05RQ;info=<http://ca-cms.orglab.biz:8000/certs/d0cbc3f6bac0d0a1f79f786aa5543b01>;alg=ES256
          description: The SIP Identity header created
        date:
          type: string
          example: Fri, 14 May 2021 16:57:06 GMT
          description: The 'Date' value used for SIP Identity header creation, if not specified in the request
    SuccessResponseProxy:
      required:
      - status
      - header
      type: object
      properties:
        status:
          type: string
          example: ok
          description: |
            The status of Verification Service operation for SIP proxy. A successful response in JSON format includes the "status" attribute with a value of "ok". It also contains an optional "next_hop" attribute for indicating the next hop for routing the SIP messages, and an optional "policy" attribute with an opaque string to be consumed by the SIP proxy for manipulating SIP headers and mapping error conditions. Finally, it contains an optional "header" attribute, containing a list of SIP headers to be added to or removed from the SIP INVITE message.
        next_hop:
          type: string
          example: 'udp:192.168.1.1:5060'
          description: The URI of next hop
        policy: 
          type: string
          example: {'stateful':false,'via':false,'max_forwards':false,'route':false,'record_route':false,'error_action':[{'error':'default','action':'passthru'}]}
          description: The policy for processing the SIP message
        header: 
          type: array
          description: A list of SIP headers or RequestLine to be added into or removed from SIP INVITE message
          items:
            type: object
            properties:
              operation:
                type: string
                description: Either 'add' or 'remove'
                example: add
              name:
                type: string
                description: The name of the SIP header or RequestLine to be added or removed
                example: y
              value:
                type: string
                description: The value of the SIP header or RequestLine to be added or removed
                example: 'eyJhbGciOiJFUzI1NiIsInBwdCI6InNoYWtlbiIsInR5cCI6InBhc3Nwb3J0IiwieDV1IjoiaHR0cHM6Ly9jYS1hdXRobi5uZXVzdGFybGFiLmJpei9jY2lkL2F1dGhuL3YyL2NlcnRzLzIwMDAxLjEwMDAxIn0.eyJhdHRlc3QiOiJDIiwiZGVzdCI6eyJ0biI6WyIxNzAzNTU1MDAwMiJdfSwiaWF0IjoxNjIxMDExNDI1LCJta3kiOlt7ImFsZyI6Im1kNSIsImRpZyI6IjE0NzU4RjFBRkQ0NEMwOUI3OTkyMDczQ0NGMDBCNDNEIn0seyJhbGciOiJzaGEtMjU2IiwiZGlnIjoiQUVDMDcwNjQ1RkU1M0VFM0IzNzYzMDU5Mzc2MTM0RjA1OENDMzM3MjQ3Qzk3OEFERDE3OEI2Q0NERkIwMDE5RiJ9XSwib3JpZyI6eyJ0biI6IjE1NzE1NTUwMDAxIn0sIm9yaWdpZCI6ImZkYTYyM2EyLWE4OWQtMTFlOS1hZjgzLTAwNTA1NjlhYmIzNCJ9.ulLtqgsrg4GQiDC6kcNA94rRI_oXhBbClLYMkejJlPKUK2N0WW5Jkawbo88nyprUVStu1WWQQGR8Ha6Qnm41pg;info=<http://{hostname}:{port}/{optionalRoutingPath}/authn/certs/20001.10001>;alg=ES256;ppt=\"shaken\""'
    ErrorResponse400:
      required:
      - error_id
      - http_status_code
      - sip_code
      - reason
      - timestamp
      type: object
      properties:
        error_id:
          type: string
          example: UriSchemeInvalid
          description: The unique error identifier
        http_status_code:
          type: integer
          example: 400
          description: The HTTP response status code
        sip_code: 
          type: string
          example: 416
          description: The SIP response code associated with the error
        reason:
          type: string
          example: URI scheme is invalid
          description: The detailed error text
        timestamp:
          type: string
          example: Fri, 14 May 2021 16:57:02 GMT
          description: The timestamp when the error is generated
        developer_message:
          type: string
          example: Supported URI schemes are tel, sip, and sips
          description: The additional developer message, if any
        attributes:
          type: string
          example: 
          description: The name/value pair attribute map associated with the error
        attributes.uri:
          type: string
          example: Alice <mail:alice@example.com>
          description: The attribute name of 'uri' in the name/value pair
    ErrorResponse403:
      required:
      - error_id
      - http_status_code
      - sip_code
      - reason
      - timestamp
      type: object
      properties:
        error_id:
          type: string
          example: CredentialExpired
          description: The unique error identifier
        http_status_code:
          type: integer
          example: 403
          description: The HTTP response status code
        sip_code: 
          type: string
          example: 437
          description: The SIP response code associated with the error
        reason:
          type: string
          example: Credential has expired
          description: The detailed error text
        timestamp:
          type: string
          example: Fri, 14 May 2021 16:57:02 GMT
          description: The timestamp when the error is generated
        developer_message:
          type: string
          example: Certificate has expired at current date/time
          description: The additional developer message, if any
        attributes:
          type: string
          example: 
          description: The name/value pair attribute map associated with the error
        attributes.alias:
          type: string
          example: test2
          description: The attribute name of 'alias' in the name/value pair
    ErrorResponseProxy403:
      required:
      - error_id
      - http_status_code
      - sip_code
      - reason
      - timestamp
      type: object
      properties:
        status:
          type: string
          example: error
          description: A failure response in JSON format includes the "status" attribute with a value of "error", and an "error" attribute, containing a list of error conditions that result in the failure.
        error: 
          description: A list of errors encountered in STIR authentication operation for SIP proxy
          type: array
          items:
            type: object
            properties: 
              error_id:
                type: string
                description: The unique error identifier
                example: RequestStaleDate
              http_status_code:
                type: integer
                example: 403
                description: The HTTP response status code
              sip_code: 
                type: string
                example: 403
                description: The SIP response code associated with the error
              reason:
                type: string
                example: Stale date value
                description: The detailed error text
              timestamp:
                type: string
                example: Fri, 14 May 2021 16:57:02 GMT
                description: The timestamp when the error is generated
              attributes: 
                type: array
                description: The name/value pair .attribute map associated with the error
                items: 
                  type: object
                  properties: 
                    allowed_clock_skew:
                      type: string
                      description: The attribute name of 'allowed_clock_skew' in the name/value pair
                      example: '60'
                    difference: 
                      type: string
                      description: The attribute name of 'difference' in the name/value pair
                      example: '145685787'
        next_hop:
          type: string
          example: udp:192.168.1.1:5060
          description: The additional developer message, if any
        policy:
          type: string
          example: {'stateful':false,'via':false,'max_forwards':false,'route':false,'record_route':false,'error_action':[{'error':'default','action':'passthru'}]}
          description: The name/value pair attribute map associated with the error
    ErrorResponseCerts400:
      required:
      - error_id
      - http_status_code
      - sip_code
      - reason
      - timestamp
      type: object
      properties:
        error_id:
          type: string
          example: CredentialKeyStoreError
          description: The unique error identifier
        http_status_code:
          type: integer
          example: 403
          description: The HTTP response status code
        sip_code: 
          type: string
          example: 437
          description: The SIP response code associated with the error
        reason:
          type: string
          example: Error in accessing keystore
          description: The detailed error text
        timestamp:
          type: string
          example: Fri, 14 May 2021 16:57:02 GMT
          description: The timestamp when the error is generated
        attributes:
          type: string
          example: 
          description: The name/value pair attribute map associated with the error
        attributes.error_text:
          type: string
          example: ./data/ccid-authn-data-not-exist.jks (No such file or directory)
          description: The attribute name of 'error_text' in the name/value pair
        attributes.url:
          type: string
          example: file:./data/ccid-authn-data-not-exist.jks
          description: The attribute name of 'url' in the name/value pair
    ErrorAPISuccessResponse:
      type: array
      items:
        type: object
        required:
          - error_id
        properties: 
          error_id:
            type: string
            description: The unique error identifier
            example: InternalServerError
          http_status_code:
            type: integer
            description: The HTTP response status code
            example: 500
          sip_code:
            type: integer
            description: The SIP response code associated with the error
            example: 500
          reason:
            type: string
            description: The detailed error text
            example: Internal server error
    VerifyIdentity:
      required:
      - from
      - to
      - identity
      type: object
      properties:
        from:
          type: string
          example: Alice <sip:alice@example.com>
          description: \"From\" header value from SIP INVITE message
        to:
          type: string
          example: Bob <sip:5715550000@example.com>
          description: \"To\" header value from SIP INVITE message
        identity:
          type: array
          example: Bob <sip:5715550000@example.com>
          description: A list of SIP Identity values to be verified
        diversion: 
          type: array
          description: A list of 'Diversion' header values from SIP INVITE message. If specified, must be one as specified in RFC5806 Section 4
        resource_priority: 
          type: array
          description: A list of 'Resource-Priority' header values from SIP INVITE message. If specified, must be one as specified in RFC4412 Section 3.1
        verstat:
          type: boolean
          description: Flag for returning verstat value after SIP Identity values are verified. If specified, must be true or false
          example: X-REQUEST-ID-12345
        identity_info: 
          type: boolean
          description: Flag for returning information related to SIP Identity values verified. If specified, must be true or false
        request_id:
          type: string
          description: Client supplied request identifier for tracking purpose. If not null, it will be returned back in the response object
          example: X-REQUEST-ID-12345
        status: 
          type: string
          example: Bob <sip:7035550000@example.com>;reason=away
          description: Verification status requirement. If specified, must be 'none', 'partial' or 'all'
        date: 
          type: string
          description: Date header value from SIP INVITE message. If specified, must be in RFC1123 format
        pai:
          type: array
          description: A list of 'P-Asserted-Identity' header values from SIP INVITE message. If specified, must be one as specified in RFC 3325 Section 9.1
        finger_print:
          type: array
          description: A list of SDP 'a=fingerprint' attribute values from SIP INVITE message. If specified, must be one as specified in RFC 3325 Section 9.1
          items:
            type: object
            properties: 
              algorithm: 
                type: string
                description: Algorithm name of a SDP 'a=fingerprint' attribute from SIP INVITE message. Cannot be null or empty
              digest: 
                type: string
                description: Digest value of a SDP 'a=fingerprint' attribute from SIP INVITE message. Cannot be null or empty
        orig_cc: 
          type: string
          description: Default country codes for the originator telephone number. If specified, must be a valid country code
        dest_cc: 
          type: string
          description: Default country code for the destination telephone number. If specified, must be a valid country code
        cnam:
          type: boolean
          description: Flag for performing CNAM lookup. If specified, must be true or false
        ecnam:
          type: boolean
          description: Flag for performing ECNAM lookup. If specified, must be true or false
        robocall:
          type: boolean
          description: Flag for returning Robocall Call Insight data. If specified, must be true or false
    VerifyErrorResponse400:
      type: object
      properties:
        status:
          type: string
          example: error
          description: Verification status
        error: 
          type: array
          description: "Array of errors"
          items: 
            type: object
            properties: 
              error_id: 
                type: string
                description: The unique error identifier
                example: IdentitySignatureVerifyFailed
              http_status_code: 
                type: integer
                description: The HTTP response status code
                example: 400
              sip_code: 
                type: integer
                description: The SIP response code associated with the error
                example: 438
              reason: 
                type: string
                description: The detailed error text
                example: Identity signature failed to be verified
              timestamp: 
                type: string
                description: The timestamp when the error is generated
                example: Identity signature failed to be verified
              attributes: 
                type: object
                properties: 
                  payload: 
                    type: string
                    description: The attribute name of 'payload' in the name/value pair
                    example: eyJhbGciOiJFUzI1NiIsInR5cCI6InBhc3Nwb3J0IiwieDV1IjoiaHR0cDovL2NhLmV4YW1wbGUuY29tL3Rlc3QuZGVyIn0.eyJkZXN0Ijp7InRuIjpbIjE1NzE1NTUwMDAxIl19LCJpYXQiOjE2MTg1NDE4MTksIm9yaWciOnsidG4iOiIxNTcxNTU1MDAwMCJ9fQ
                  signature: 
                    type: string
                    description: The attribute name of 'signature' in the name/value pair
                    example: mH96Br
        cnam_error: 
          type: object
          description: "CNAM Error"
          properties: 
            error_id:
              type: string
              description: The unique error identifier
              example: CnamDataNotFound
            http_status_code: 
              type: integer
              description: The HTTP response status code
              example: 400
            sip_code: 
              type: integer
              description: The SIP response code associated with the error
              example: 400
            reason: 
              type: string
              description: The detailed error text
              example: CNAM data not found
            timestamp: 
              type: string
              description: The timestamp when the error is generated
              example: Fri, 16 Apr 2021 02:56:56 GMT
        ecnam_error: 
          type: object
          description: "ECNAM Error"
          properties: 
            error_id:
              type: string
              description: The unique error identifier
              example: EcnamNotAuthorized
            http_status_code: 
              type: integer
              description: The HTTP response status code
              example: 400
            sip_code: 
              type: integer
              description: The SIP response code associated with the error
              example: 400
            reason: 
              type: string
              description: The detailed error text
              example: ECNAM service not authorized
            timestamp: 
              type: string
              description: The timestamp when the error is generated
              example: Fri, 16 Apr 2021 02:56:56 GMT
    VerifyResponse:
      type: object
      properties: 
        status: 
          type: "string"
          example: "ok"
          description: | 
            Its value is "ok" after the SIP Identity headers are validated with the required verification status. There are three possible "status" values specified in the request
              * **none** - This status value indicates that the SIP Identity headers specified in the request are not required to be verified

              * **partial** - This status value indicates that one or more SIP Identity headers specified in the request are required to be verified

              * **all** - This status value indicates that all SIP Identity headers specified in the request are required to be verified

            Based on the verification status requirement specified in the request, the VS will return a "status" attribute in the response with the following two possible values: 

              * **ok** - This status value indicates that the verification result of SIP Identity headers has met the verification status requirement specified in the request
              * **error** - This status value indicates that the verification result of SIP Identity headers has not met the verification status requirement specified in the request
            
            If there are any errors encountered in the verification process, an "error" attribute in the response will list all of those errors.

            If the "robocall" attribute is specified as "true" in the request, a "call_insight" attribute will be returned, if any.
        request_id: 
          type: "string"
          example: "X-REQUEST-ID-12345"
          description: "Client supplied request identifier for tracking purpose"
        verstat: 
          type: "string"
          example: "TN-Validation-Passed"
          description: "'verstat' value defined by ETSI TS 124 299"
        identity_info: 
          description: "A list of information related to SIP Identity headers verified"
          type: "array"
          items: 
            type: "object"
            properties: 
              status: 
                type: "string"
                example: "Ok"
                description: "The verification status of a SIP Identity header"
              params: 
                type: "string"
                example: "info=<http://ca.example.com/test.der>;alg=ES256;ppt=\"shaken\""
                description: "The parameters in a SIP Identity header"
              header:
                properties: 
                  alg: 
                    type: "string"
                    example: "ES256"
                  ppt: 
                    type: "string"
                    example: "shaken"
                  typ: 
                    type: "string"
                    example: "passport"
                  x5u: 
                    type: "string"
                    example: "http://ca.example.com/test.der"
                type: "object"
                description: "The decoded PASSporT header object in a SIP Identity header"
              claim: 
                description: "The decoded PASSporT claim object in a SIP Identity header"
                properties: 
                  attest: 
                    type: "string"
                    example: "A"
                  dest: 
                    required: 
                      - "tn"
                    properties: 
                      tn: 
                        type: "array"
                        items: 
                          type: "string"
                        example: 
                          - "15715550001"
                    type: "object"
                  iat: 
                    type: "number"
                    example: 1618541811
                  mky: 
                    type: "array"
                    items: 
                      type: "object"
                      properties: 
                        alg: 
                          type: "string"
                          example: "SHA-1"
                        dig: 
                          type: "string"
                          example: "4AADB9B13F82183B540212DF3E5D496B19E57CAB"
                  orig: 
                    properties: 
                      tn: 
                        type: "string"
                        example: "17035550001"
                    type: "object"
                  origid: 
                    type: "string"
                    example: "123456-ABCD-999999"
                type: "object"
              certificate_info: 
                description: "The basic information of the certificate used in a SIP Identity header"
                properties: 
                  subject: 
                    type: "string"
                    example: "C=US, ST=VA, L=Somewhere, O=\"AcmeTelecom, Inc.\", OU=VOIP, CN=TEST-EC-256-EXT-TN-JWT"
                    description: "The subject of the certificate used in a SIP Identity header"
                  issuer: 
                    type: "string"
                    example: "C=US, O=Organization IOT Lab, CN=CallAuthnCA"
                    description: "The issuer of the certificate used in a SIP Identity header"
                  tn_auth_list: 
                    type: "array"
                    description: "The TN Authorization List of the certificate used in a SIP Identity header"
                    items: 
                      type: "object"
                      properties: 
                        spc: 
                          type: "string"
                          example: "X001"
                          description: "A Service Provider Code in TN Authorization List"
                type: "object"
        cnam: 
          type: "string"
          example: "Alice In Wonderland"
          description: "CNAM data"
        ecnam: 
          description: "ECNAM data"
          properties: 
            display_template: 
              type: "string"
              example: "none"
              description: "ECNAM data display template"
            business_name: 
              type: "string"
              example: "Disney World"
              description: "Full business name"
            department: 
              type: "string"
              example: "Theme Park"
              description: "Department name"
            line_type: 
              type: "string"
              example: "Wireline"
              description: "Line type, such as wireline, wireless, etc."
            subscriber_type: 
              type: "string"
              example: "Business"
              description: "Subscriber type, such as business, residential, etc."
            business_type: 
              type: "string"
              example: "Entertainment"
              description: "Business type"
            business_address: 
              type: "string"
              example: "Walt Disney World Resort"
              description: "Business address"
            locality: 
              type: "string"
              example: "Orlando, FL"
              description: Locality, such as 'Sterling, VA'
            city: 
              type: "string"
              example: "Orlando"
              description: "City, such as 'Sterling'"
            state: 
              type: "string"
              example: "FL"
              description: "State, such as 'VA'"
            country: 
              type: "string"
              example: "US"
              description: "Country code, such as US"
            postal_code: 
              type: "string"
              example: "32830"
              description: "Postal code, such as 20166-1234"
            website_url: 
              type: "string"
              example: "http://movies.disney.com/alice-in-wonderland-1951"
              description: "Website URL"
            logo_url: 
              type: "string"
              example: "https://static-mh.content.disney.io/matterhorn/assets/goc/nav-logo-dark@2x-2b3eb08c507c.png"
              description: "Logo URL"
            tagline: 
              type: "string"
              example: "#AliceInWonderLand"
              description: "Tagline"
            employee_name: 
              type: "string"
              example: "Alice"
              description: "Employee’s name, such as John Smith"
            first_name: 
              type: "string"
              example: "Alice"
              description: "Employee’s first name, such as John"
            last_name: 
              type: "string"
              example: "Liddell"
              description: "Employee’s last name, such as Smith"
            job_title: 
              type: "string"
              example: "Adventurer"
              description: "Job title"
            headshot_url: 
              type: "string"
              example: "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcR2Q1GWX6hdmMr2dh10SoTeEKEn4S4toc4V3yAJCrPQHlzWvr_I"
              description: "Headshot/avatar image URL"
            email: 
              type: "string"
              example: "alice@disney.com"
              description: "Email address"
            cnam: 
              type: "string"
              example: "Alice In Wonderland"
              description: "CNAM data"
            call_purpose: 
              type: "string"
              example: "Customer Support"
              description: "The purpose for calls originated from the telephone number"
            social_media_info: 
              description: "Social media info, as an object map of name/value pairs"
              properties: 
                Facebook: 
                  type: "string"
                  example: "https://www.facebook.com/DisneyAliceInWonderland"
                  description: "Facebook URL"
                Twitter: 
                  type: "string"
                  example: "https://twitter.com/Disney"
                  description: "Twitter URL"
              type: "object"
            p_asserted_identity: 
              type: "string"
              example: "\"Alice In Wonderland\" <sip:alice@example.com;tmpl=none;bn=Disney%20World;dept=Theme%20Park;lt=Wireline;st=Business;bt=Entertainment;ba=Walt%20Disney%20World%20Resort;cs=Orlando, FL;city=Orlando;state=FL;ct=US;zip=32830;wb=http://movies.disney.com/alice-in-wonderland-1951;lg=https://static-mh.content.disney.io/matterhorn/assets/goc/nav-logo-dark@2x-2b3eb08c507c.png;tg=#AliceInWonderLand;sm=%7B%22Facebook%22%3A%22https%3A%2F%2Fwww.facebook.com%2FDisneyAliceInWonderland%22%2C%22Twitter%22%3A%22https%3A%2F%2Ftwitter.com%2FDisney%22%7D;nm=Alice;fn=Alice;ln=Liddell;jt=Adventurer;hs=https://encrypted-tbn0.gstatic.com/images?q%3dtbn:ANd9GcR2Q1GWX6hdmMr2dh10SoTeEKEn4S4toc4V3yAJCrPQHlzWvr_I;cp=Customer Support;email=alice@disney.com>"
              description: "Value as 'allow as SIP P-Asserted-Identity header"
          type: "object"
        call_insight: 
          description: "Call insight details"
          properties: 
            call_treatment: 
              type: "string"
              example: "allow"
              description: "Call treatment method, such as 'allow', 'deny', 'send_to_vm' or 'none'"
            fraud_score: 
              type: "number"
              example: 0
              description: "Numeric fraud score between 0 and 100"
            original_calling_name: 
              type: "string"
              example: "Alice"
              description: "Original calling name value"
          type: "object"
    VerifyResponse-SJ:
      type: object
      properties: 
        status: 
          type: "string"
          example: "ok"
          description: | 
            Its value is "ok" after the SIP Identity headers are validated with the required verification status. There are three possible "status" values specified in the request
              * **none** - This status value indicates that the SIP Identity headers specified in the request are not required to be verified

              * **partial** - This status value indicates that one or more SIP Identity headers specified in the request are required to be verified

              * **all** - This status value indicates that all SIP Identity headers specified in the request are required to be verified

            Based on the verification status requirement specified in the request, the VS will return a "status" attribute in the response with the following two possible values: 

              * **ok** - This status value indicates that the verification result of SIP Identity headers has met the verification status requirement specified in the request
              * **error** - This status value indicates that the verification result of SIP Identity headers has not met the verification status requirement specified in the request
            
            If there are any errors encountered in the verification process, an "error" attribute in the response will list all of those errors.

            If the "robocall" attribute is specified as "true" in the request, a "call_insight" attribute will be returned, if any.
        cnam: 
          type: "string"
          example: "Alice In Wonderland"
          description: "CNAM data"
        ecnam: 
          description: "ECNAM data"
          properties: 
            display_template: 
              type: "string"
              example: "none"
              description: "ECNAM data display template"
            business_name: 
              type: "string"
              example: "Disney World"
              description: "Full business name"
            department: 
              type: "string"
              example: "Theme Park"
              description: "Department name"
            line_type: 
              type: "string"
              example: "Wireline"
              description: "Line type, such as wireline, wireless, etc."
            subscriber_type: 
              type: "string"
              example: "Business"
              description: "Subscriber type, such as business, residential, etc."
            business_type: 
              type: "string"
              example: "Entertainment"
              description: "Business type"
            business_address: 
              type: "string"
              example: "Walt Disney World Resort"
              description: "Business address"
            locality: 
              type: "string"
              example: "Orlando, FL"
              description: Locality, such as 'Sterling, VA'
            city: 
              type: "string"
              example: "Orlando"
              description: "City, such as 'Sterling'"
            state: 
              type: "string"
              example: "FL"
              description: "State, such as 'VA'"
            country: 
              type: "string"
              example: "US"
              description: "Country code, such as US"
            postal_code: 
              type: "string"
              example: "32830"
              description: "Postal code, such as 20166-1234"
            website_url: 
              type: "string"
              example: "http://movies.disney.com/alice-in-wonderland-1951"
              description: "Website URL"
            logo_url: 
              type: "string"
              example: "https://static-mh.content.disney.io/matterhorn/assets/goc/nav-logo-dark@2x-2b3eb08c507c.png"
              description: "Logo URL"
            tagline: 
              type: "string"
              example: "#AliceInWonderLand"
              description: "Tagline"
            employee_name: 
              type: "string"
              example: "Alice"
              description: "Employee’s name, such as John Smith"
            first_name: 
              type: "string"
              example: "Alice"
              description: "Employee’s first name, such as John"
            last_name: 
              type: "string"
              example: "Liddell"
              description: "Employee’s last name, such as Smith"
            job_title: 
              type: "string"
              example: "Adventurer"
              description: "Job title"
            headshot_url: 
              type: "string"
              example: "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcR2Q1GWX6hdmMr2dh10SoTeEKEn4S4toc4V3yAJCrPQHlzWvr_I"
              description: "Headshot/avatar image URL"
            email: 
              type: "string"
              example: "alice@disney.com"
              description: "Email address"
            cnam: 
              type: "string"
              example: "Alice In Wonderland"
              description: "CNAM data"
            call_purpose: 
              type: "string"
              example: "Customer Support"
              description: "The purpose for calls originated from the telephone number"
            social_media_info: 
              description: "Social media info, as an object map of name/value pairs"
              properties: 
                Facebook: 
                  type: "string"
                  example: "https://www.facebook.com/DisneyAliceInWonderland"
                  description: "Facebook URL"
                Twitter: 
                  type: "string"
                  example: "https://twitter.com/Disney"
                  description: "Twitter URL"
              type: "object"
            p_asserted_identity: 
              type: "string"
              example: "\"Alice In Wonderland\" <sip:alice@example.com;tmpl=none;bn=Disney%20World;dept=Theme%20Park;lt=Wireline;st=Business;bt=Entertainment;ba=Walt%20Disney%20World%20Resort;cs=Orlando, FL;city=Orlando;state=FL;ct=US;zip=32830;wb=http://movies.disney.com/alice-in-wonderland-1951;lg=https://static-mh.content.disney.io/matterhorn/assets/goc/nav-logo-dark@2x-2b3eb08c507c.png;tg=#AliceInWonderLand;sm=%7B%22Facebook%22%3A%22https%3A%2F%2Fwww.facebook.com%2FDisneyAliceInWonderland%22%2C%22Twitter%22%3A%22https%3A%2F%2Ftwitter.com%2FDisney%22%7D;nm=Alice;fn=Alice;ln=Liddell;jt=Adventurer;hs=https://encrypted-tbn0.gstatic.com/images?q%3dtbn:ANd9GcR2Q1GWX6hdmMr2dh10SoTeEKEn4S4toc4V3yAJCrPQHlzWvr_I;cp=Customer Support;email=alice@disney.com>"
              description: "Value as 'allow as SIP P-Asserted-Identity header"
          type: "object"
        call_insight: 
          description: "Call insight details"
          properties: 
            call_treatment: 
              type: "string"
              example: "allow"
              description: "Call treatment method, such as 'allow', 'deny', 'send_to_vm' or 'none'"
            fraud_score: 
              type: "number"
              example: 0
              description: "Numeric fraud score between 0 and 100"
            original_calling_name: 
              type: "string"
              example: "Alice"
              description: "Original calling name value"
          type: "object"
    CNAM-Error:
      type: object
      description: "The error encountered in CNAM lookup"
      properties: 
        cnam_error: 
          description: "The error encountered in CNAM lookup"
          properties: 
            error_id: 
              type: "string"
              example: "CnamNotAuthorized"
              description: "The unique error identifier"
            http_status_code: 
              type: "number"
              example: 400
              description: "The HTTP response status code"
            sip_code: 
              type: "number"
              example: 400
              description: "The SIP response code associated with the error"
            reason: 
              type: "string"
              example: "CNAM service not authorized"
              description: "The detailed error text"
            timestamp: 
              type: "string"
              example: "Fri, 16 Apr 2021 02:56:55 GMT"
              description: "The timestamp when the error is generated"
          type: "object"
    ECNAM-Error:
      type: object
      description: "The error encountered in ECNAM lookup"
      properties: 
        ecnam_error: 
          description: "The error encountered in ECNAM lookup"
          properties: 
            error_id: 
              type: "string"
              example: "CnamNotAuthorized"
              description: "The unique error identifier"
            http_status_code: 
              type: "number"
              example: 400
              description: "The HTTP response status code"
            sip_code: 
              type: "number"
              example: 400
              description: "The SIP response code associated with the error"
            reason: 
              type: "string"
              example: "CNAM service not authorized"
              description: "The detailed error text"
            timestamp: 
              type: "string"
              example: "Fri, 16 Apr 2021 02:56:55 GMT"
              description: "The timestamp when the error is generated"
          type: "object"
    CNAM-Input:
      type: object
      properties: 
        from: 
          type: "string"
          example: "Alice <sip:+15715550000@example.com>"
          description: "'From' header value from SIP INVITE message"
    ECNAM-Response: 
      type: object
      properties: 
        ecnam:
          description: "ECNAM data"
          properties: 
            display_template: 
              type: "string"
              example: "none"
              description: ECNAM data display template
            business_name: 
              type: "string"
              example: "Disney World"
              description: Full business name
            department: 
              type: "string"
              example: "Theme Park"
              description: Department name
            line_type: 
              type: "string"
              example: "Wireline"
              description: Line type, such as wireline, wireless, etc.
            subscriber_type: 
              type: "string"
              example: "Business"
              description: Subscriber type, such as business, residential, etc.
            business_type: 
              type: "string"
              example: "Entertainment"
              description: Business type
            business_address: 
              type: "string"
              example: "Walt Disney World Resort"
              description: Business address
            locality: 
              type: "string"
              example: "Orlando, FL"
              description: Locality, such as 'Sterling, VA'
            city: 
              type: "string"
              example: "Orlando"
              description: City, such as 'Sterling'
            state: 
              type: "string"
              example: "FL"
              description: State or province, such as 'VA'
            country: 
              type: "string"
              example: "US"
              description: Country code, such as US
            postal_code: 
              type: "string"
              example: "32830"
              description: Postal code, such as 20166-1234
            website_url: 
              type: "string"
              example: "http://movies.disney.com/alice-in-wonderland-1951"
              description: Website URL
            logo_url: 
              type: "string"
              example: "https://static-mh.content.disney.io/matterhorn/assets/goc/nav-logo-dark@2x-2b3eb08c507c.png"
              description: 	Logo URL
            tagline: 
              type: "string"
              example: "#AliceInWonderLand"
              description: Tagline
            employee_name: 
              type: "string"
              example: "Alice"
              description: Employee’s name, such as John Smith
            first_name: 
              type: "string"
              example: "Alice"
              description: Employee’s first name, such as John
            last_name: 
              type: "string"
              example: "Liddell"
              description: Employee’s last name, such as Smith
            job_title: 
              type: "string"
              example: "Adventurer"
              description: Job title
            headshot_url: 
              type: "string"
              example: "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcR2Q1GWX6hdmMr2dh10SoTeEKEn4S4toc4V3yAJCrPQHlzWvr_I"
              description: Headshot/avatar image URL
            email: 
              type: "string"
              example: "alice@disney.com"
              description: Email address
            cnam: 
              type: "string"
              example: "Alice In Wonderland"
              description: CNAM data
            call_purpose: 
              type: "string"
              example: "Customer Support"
              description: The purpose for calls originated from the telephone number
            social_media_info: 
              properties: 
                Facebook: 
                  type: "string"
                  example: "https://www.facebook.com/DisneyAliceInWonderland"
                  description: Facebook URL
                Twitter: 
                  type: "string"
                  example: "https://twitter.com/Disney"
                  description: Twitter URL
              type: "object"
              description: Social media info, as an object map of name/value pairs
            p_asserted_identity: 
              type: "string"
              example: "\"Alice In Wonderland\" <sip:alice@example.com;tmpl=none;bn=Disney%20World;dept=Theme%20Park;lt=Wireline;st=Business;bt=Entertainment;ba=Walt%20Disney%20World%20Resort;cs=Orlando, FL;city=Orlando;state=FL;ct=US;zip=32830;wb=http://movies.disney.com/alice-in-wonderland-1951;lg=https://static-mh.content.disney.io/matterhorn/assets/goc/nav-logo-dark@2x-2b3eb08c507c.png;tg=#AliceInWonderLand;sm=%7B%22Facebook%22%3A%22https%3A%2F%2Fwww.facebook.com%2FDisneyAliceInWonderland%22%2C%22Twitter%22%3A%22https%3A%2F%2Ftwitter.com%2FDisney%22%7D;nm=Alice;fn=Alice;ln=Liddell;jt=Adventurer;hs=https://encrypted-tbn0.gstatic.com/images?q%3dtbn:ANd9GcR2Q1GWX6hdmMr2dh10SoTeEKEn4S4toc4V3yAJCrPQHlzWvr_I;cp=Customer Support;email=alice@disney.com>"
              description: Value as 'allow as SIP P-Asserted-Identity header
          type: "object"
        call_insight: 
          description: Call insight info
          properties: 
            call_treatment: 
              type: "string"
              example: "allow"
              description: Call treatment method, such as 'allow', 'deny', 'send_to_vm' or 'none'
            fraud_score: 
              type: "number"
              example: 0
              description: Numeric fraud score between 0 and 100
            original_calling_name: 
              type: "string"
              example: "Alice"
              description: Original calling name value
          type: "object"
